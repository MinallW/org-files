#+TITLE: Hyperbola

Documenting and working with HyperbolaBSD algorithms. Simple Recipes for
instructions, descriptions and a sequence of steps of different algorithms to
create new code from scratch.

I'll first need to clear some basic definitions, that are used a lot in these
algorithms.

* C Preprocessor

Allows us to define macros, used for various reasons, all macros start with *#*,
the simplest example:

#+BEGIN_SRC c
#include <stdio.h>
#+END_SRC

We call a stdio.h, a header file and insert it into our working project, now we
can use functions from stdio.h file.

* Header Files C

A header file is a file with extension .h, containing C function declarations
and macro definitions to be shared between sveral source files. There are two
types of header files: the files that the programmer writes and the files
comming with the compiler.

You request to use a header file in your program by including it with the C
preprocessing directive #include, like you have seen inclusion of stdio.h header
file, which comes along with your compiler.

Includiong a header file is equal to copying the content of the header file but
we do not do it because it will be error-prone and it is not a good idea to copy
the content of a header file into source files, especially if we have multiple
source files in a program.

A simple practice in C programs is to keep all constants, macros, system wide
global variables and function prototypes in the header files and include that
header file wherever it is required.




* kern_arch_amd64_machine_cpu_variables.txt

We start defining a code name for the variable and its required headers:

#+BEGIN_SRC c
// code_name:		CPU variables
// code_name_end

// required_headers:	#include <sys/types.h>	/* required by: int8_t and u_int32_t */
// required_headers_end

#+END_SRC

Then, we start defining a constant named algorithm, with the simple line of:

#+BEGIN_SRC c
algorithm:

// Here some code

algorithm_end
#+END_SRC
